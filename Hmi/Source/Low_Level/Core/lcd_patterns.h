//----------------------------------------------------------------------------------------------------------
/*
 <pre>
 Copyright              Copyright ABB, 2004.
                        All rights reserved. Reproduction, modification,
                        use or disclosure to third parties without express
                        authority is forbidden.

 System					Low Level HMI

 Description			All lcd patterns used for the display are declared here.

 Author					Martin Ashford
 Remarks
 $Id $
 </pre>
*/
//----------------------------------------------------------------------------------------------------------
#ifndef _FONTS_H
#define _FONTS_H

#ifndef _IMPLEMENTATIONDEFINITIONS
  #error implementation.h must be included
#endif

#if defined(TYPE_2_IMPLEMENTATION) || defined(TYPE_3_IMPLEMENTATION)
    #ifndef _COMPILETIMEDEFINITIONS
        #error compileTimeDefinitions.h must be included
    #endif
#endif

#ifndef _FIXEDICONDEF_H
  #error FixedIconDefinitions.h must be included
#endif

#ifndef _DRIVER_H
  #error driver.h must be included
#endif

#define BIT_BATTERNS_0x01_to_0x05                                      \
    0x38, 0x46, 0x45, 0x45, 0x38,   /* 0x01  o + acute               */\
    0x00, 0x48, 0x7A, 0x41, 0x01,   /* 0x02  i + acute               */\
    0x3C, 0x42, 0x41, 0x21, 0x7C,   /* 0x03  u + acute               */\
    0x20, 0x56, 0x55, 0x55, 0x78,   /* 0x04  a + acute               */\
    0x20, 0x52, 0x55, 0x56, 0x78    /* 0x05  a + ring                */

#define BIT_BATTERNS_0x06_to_0x09                                      \
    0x04, 0x02, 0x7F, 0x02, 0x04,   /* 0x06  up arrow                */\
    0x10, 0x20, 0x7F, 0x20, 0x10,   /* 0x07  down arrow	             */\
    0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   /* 0x08  three bars              */\
    0x40, 0x00, 0x40, 0x00, 0x40    /* 0x09  three dots              */

#define BIT_BATTERN_0x0A_TYPE_1                                        \
    0x08, 0x08, 0x08, 0x08, 0x08    /* 0x0A  dash                    */

#define BIT_BATTERN_0x0A_TYPE_2_3                                      \
    0x7E, 0x09, 0x7E, 0x49, 0x41    /* 0x0A  AE merged               */

#define BIT_BATTERNS_0x0B_to_0x1A                                      \
    0x00, 0x00, 0x07, 0x05, 0x07,   /* 0x0B  degree                  */\
    0x70, 0x29, 0x24, 0x29, 0x70,   /* 0x0C  A + umlaut              */\
    0x38, 0x45, 0x44, 0x45, 0x38,   /* 0x0D  O + umlaut              */\
    0x3C, 0x41, 0x40, 0x41, 0x3C,   /* 0x0E  U + umlaut              */\
    0x20, 0x55, 0x54, 0x55, 0x78,   /* 0x0F  a + umlaut              */\
    0x38, 0x45, 0x44, 0x45, 0x38,   /* 0x10  o + umlaut              */\
    0x3C, 0x41, 0x40, 0x21, 0x7C,   /* 0x11  u + umlaut              */\
    0x38, 0x56, 0x55, 0x55, 0x18,   /* 0x12  e + acute               */\
    0x38, 0x55, 0x55, 0x56, 0x18,   /* 0x13  e + grave               */\
    0x38, 0x56, 0x55, 0x56, 0x18,   /* 0x14  e + circumflex          */\
    0x0C, 0x52, 0x52, 0x72, 0x10,   /* 0x15  c + cedilla             */\
    0x5C, 0x62, 0x02, 0x62, 0x5C,   /* 0x16  omega                   */\
    0x41, 0x63, 0x55, 0x49, 0x41,   /* 0x17  Sigma                   */\
    0x40, 0x3F, 0x08, 0x08, 0x1F,   /* 0x18  mu                      */\
    0x00, 0x00, 0x19, 0x15, 0x12,   /* 0x19  superscript 2           */\
    0x00, 0x00, 0x11, 0x15, 0x0A    /* 0x1A  superscript 3           */\

#define BIT_BATTERN_0x1B_TYPE_1                                        \
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F    /* 0x1B  block                   */

#define BIT_BATTERN_0x1B_TYPE_2_3                                      \
    0x20, 0x54, 0x7C, 0x54, 0x58    /* 0x1B  ae merged               */

#define BIT_BATTERN_0x1C                                              \
    0x7E, 0x15, 0x25, 0x25, 0x1A    /* 0x1C  beta                    */

#define BIT_BATTERNS_0x1D_to_0x1F_TYPE_1                               \
    0x40, 0x60, 0x50, 0x48, 0x7C,   /* 0x1D  delta                   */\
    0x10, 0x38, 0x54, 0x10, 0x10,   /* 0x1E  left arrow              */\
    0x10, 0x10, 0x54, 0x38, 0x10    /* 0x1F  right arrow             */

#define BIT_BATTERNS_0x1D_to_0x1F_TYPE_2_3                             \
    0x7C, 0x0A, 0x11, 0x22, 0x7D,   /* 0x1D  N + tilde               */\
    0x78, 0x12, 0x09, 0x0A, 0x71,   /* 0x1E  n + tilde               */\
    0x38, 0x64, 0x54, 0x4C, 0x38    /* 0x1F  o + slash               */

#define BIT_BATTERNS_0x20_to_0x38                                      \
    0x00, 0x00, 0x00, 0x00, 0x00,   /* 0x20  space                   */\
    0x00, 0x00, 0x5F, 0x00, 0x00,   /* 0x21  !                       */\
    0x00, 0x07, 0x00, 0x07, 0x00,   /* 0x22  double quotes           */\
    0x14, 0x7F, 0x14, 0x7F, 0x14,   /* 0x23  #                       */\
    0x24, 0x2A, 0x7F, 0x2A, 0x12,   /* 0x24  $                       */\
    0x23, 0x13, 0x08, 0x64, 0x62,   /* 0x25  %                       */\
    0x36, 0x49, 0x55, 0x22, 0x50,   /* 0x26  &                       */\
    0x00, 0x00, 0x05, 0x03, 0x00,   /* 0x27  single quote            */\
    0x00, 0x1C, 0x22, 0x41, 0x00,   /* 0x28  (                       */\
    0x00, 0x41, 0x22, 0x1C, 0x00,   /* 0x29  )                       */\
    0x14, 0x08, 0x3E, 0x08, 0x14,   /* 0x2A  *                       */\
    0x08, 0x08, 0x3E, 0x08, 0x08,   /* 0x2B  +                       */\
    0x00, 0x00, 0x50, 0x30, 0x00,   /* 0x2C  ,                       */\
    0x08, 0x08, 0x08, 0x08, 0x08,   /* 0x2D  -                       */\
    0x00, 0x00, 0x60, 0x60, 0x00,   /* 0x2E  .                       */\
    0x20, 0x10, 0x08, 0x04, 0x02,   /* 0x2F  /                       */\
    0x3E, 0x51, 0x49, 0x45, 0x3E,   /* 0x30  0                       */\
    0x00, 0x42, 0x7F, 0x40, 0x00,   /* 0x31  1                       */\
    0x42, 0x61, 0x51, 0x49, 0x46,   /* 0x32  2                       */\
    0x21, 0x49, 0x4D, 0x4B, 0x31,   /* 0x33  3                       */\
    0x18, 0x14, 0x12, 0x7F, 0x10,   /* 0x34  4                       */\
    0x27, 0x45, 0x45, 0x45, 0x39,   /* 0x35  5                       */\
    0x3C, 0x4A, 0x49, 0x49, 0x30,   /* 0x36  6                       */\
    0x01, 0x71, 0x09, 0x05, 0x03,   /* 0x37  7                       */\
    0x36, 0x49, 0x49, 0x49, 0x36    /* 0x38  8                       */

#define BIT_BATTERNS_0x39_to_0x7E                                      \
    0x06, 0x49, 0x49, 0x29, 0x1E,   /* 0x39  9                       */\
    0x00, 0x00, 0x36, 0x36, 0x00,   /* 0x3A  :                       */\
    0x00, 0x00, 0x56, 0x36, 0x00,   /* 0x3B  ;                       */\
    0x00, 0x08, 0x14, 0x22, 0x41,   /* 0x3C  <                       */\
    0x14, 0x14, 0x14, 0x14, 0x14,   /* 0x3D  =                       */\
    0x00, 0x41, 0x22, 0x14, 0x08,   /* 0x3E  >                       */\
    0x02, 0x01, 0x51, 0x09, 0x06,   /* 0x3F  ?                       */\
    0x3E, 0x41, 0x5D, 0x55, 0x2E,   /* 0x40  @                       */\
    0x7E, 0x11, 0x11, 0x11, 0x7E,   /* 0x41  A                       */\
    0x7F, 0x49, 0x49, 0x49, 0x36,   /* 0x42  B                       */\
    0x3E, 0x41, 0x41, 0x41, 0x22,   /* 0x43  C                       */\
    0x7F, 0x41, 0x41, 0x22, 0x1C,   /* 0x44  D                       */\
    0x7F, 0x49, 0x49, 0x49, 0x41,   /* 0x45  E                       */\
    0x7F, 0x09, 0x09, 0x09, 0x01,   /* 0x46  F                       */\
    0x3E, 0x41, 0x49, 0x49, 0x7A,   /* 0x47  G                       */\
    0x7F, 0x08, 0x08, 0x08, 0x7F,   /* 0x48  H                       */\
    0x00, 0x41, 0x7F, 0x41, 0x00,   /* 0x49  I                       */\
    0x20, 0x40, 0x41, 0x3F, 0x01,   /* 0x4A  J                       */\
    0x7F, 0x08, 0x14, 0x22, 0x41,   /* 0x4B  K                       */\
    0x7F, 0x40, 0x40, 0x40, 0x40,   /* 0x4C  L                       */\
    0x7F, 0x02, 0x0C, 0x02, 0x7F,   /* 0x4D  M                       */\
    0x7F, 0x04, 0x08, 0x10, 0x7F,   /* 0x4E  N                       */\
    0x3E, 0x41, 0x41, 0x41, 0x3E,   /* 0x4F  O                       */\
    0x7F, 0x09, 0x09, 0x09, 0x06,   /* 0x50  P                       */\
    0x3E, 0x41, 0x51, 0x21, 0x5E,   /* 0x51  Q                       */\
    0x7F, 0x09, 0x19, 0x29, 0x46,   /* 0x52  R                       */\
    0x46, 0x49, 0x49, 0x49, 0x31,   /* 0x53  S                       */\
    0x01, 0x01, 0x7F, 0x01, 0x01,   /* 0x54  T                       */\
    0x3F, 0x40, 0x40, 0x40, 0x3F,   /* 0x55  U                       */\
    0x1F, 0x20, 0x40, 0x20, 0x1F,   /* 0x56  V                       */\
    0x3F, 0x40, 0x38, 0x40, 0x3F,   /* 0x57  W                       */\
    0x63, 0x14, 0x08, 0x14, 0x63,   /* 0x58  X                       */\
    0x07, 0x08, 0x70, 0x08, 0x07,   /* 0x59  Y                       */\
    0x61, 0x51, 0x49, 0x45, 0x43,   /* 0x5A  Z                       */\
    0x00, 0x7F, 0x41, 0x41, 0x00,   /* 0x5B  [                       */\
    0x02, 0x04, 0x08, 0x10, 0x20,   /* 0x5C  \                       */\
    0x00, 0x41, 0x41, 0x7F, 0x00,   /* 0x5D  ]                       */\
    0x04, 0x02, 0x01, 0x02, 0x04,   /* 0x5E  ^                       */\
    0x40, 0x40, 0x40, 0x40, 0x40,   /* 0x5F  _                       */\
    0x00, 0x00, 0x03, 0x05, 0x00,   /* 0x60  `                       */\
    0x20, 0x54, 0x54, 0x54, 0x78,   /* 0x61  a                       */\
    0x7F, 0x48, 0x44, 0x44, 0x38,   /* 0x62  b                       */\
    0x38, 0x44, 0x44, 0x44, 0x20,   /* 0x63  c                       */\
    0x38, 0x44, 0x44, 0x48, 0x7F,   /* 0x64  d                       */\
    0x38, 0x54, 0x54, 0x54, 0x18,   /* 0x65  e                       */\
    0x08, 0x7E, 0x09, 0x09, 0x02,   /* 0x66  f                       */\
    0x18, 0x54, 0x54, 0x54, 0x38,   /* 0x67  g                       */\
    0x7F, 0x08, 0x04, 0x04, 0x78,   /* 0x68  h                       */\
    0x00, 0x44, 0x7D, 0x40, 0x00,   /* 0x69  i                       */\
    0x20, 0x40, 0x44, 0x3D, 0x00,   /* 0x6A  j                       */\
    0x7F, 0x10, 0x28, 0x44, 0x00,   /* 0x6B  k                       */\
    0x00, 0x41, 0x7F, 0x40, 0x00,   /* 0x6C  l                       */\
    0x7C, 0x04, 0x18, 0x04, 0x78,   /* 0x6D  m                       */\
    0x7C, 0x08, 0x04, 0x04, 0x78,   /* 0x6E  n                       */\
    0x38, 0x44, 0x44, 0x44, 0x38,   /* 0x6F  o                       */\
    0x7C, 0x14, 0x14, 0x14, 0x08,   /* 0x70  p                       */\
    0x08, 0x14, 0x14, 0x18, 0x7C,   /* 0x71  q                       */\
    0x7C, 0x08, 0x04, 0x04, 0x08,   /* 0x72  r                       */\
    0x48, 0x54, 0x54, 0x54, 0x20,   /* 0x73  s                       */\
    0x02, 0x3F, 0x42, 0x40, 0x20,   /* 0x74  t                       */\
    0x3C, 0x40, 0x40, 0x20, 0x7C,   /* 0x75  u                       */\
    0x1C, 0x20, 0x40, 0x20, 0x1C,   /* 0x76  v                       */\
    0x3C, 0x40, 0x30, 0x40, 0x3C,   /* 0x77  w                       */\
    0x44, 0x28, 0x10, 0x28, 0x44,   /* 0x78  x                       */\
    0x0C, 0x50, 0x50, 0x50, 0x3C,   /* 0x79  y                       */\
    0x44, 0x64, 0x54, 0x4C, 0x44,   /* 0x7A  z                       */\
    0x08, 0x36, 0x41, 0x41, 0x00,   /* 0x7B  {                       */\
    0x00, 0x00, 0x7F, 0x00, 0x00,   /* 0x7C  |                       */\
    0x00, 0x41, 0x41, 0x36, 0x08,   /* 0x7D  }                       */\
    0x10, 0x08, 0x18, 0x10, 0x08    /* 0x7E  ~                       */

#define BIT_BATTERN_0x7F                                               \
    0x7F, 0x41, 0x41, 0x41, 0x7F    /* 0x7F  Not Recognised           */

#define BIT_BATTERNS_0x80_to_0xFD                                      \
    0x0E, 0x51, 0x51, 0x71, 0x0A,   /* 0x80  C + cedilla             */\
    0x3C, 0x41, 0x40, 0x21, 0x7C,   /* 0x81  u + umlaut  			 */\
    0x38, 0x56, 0x55, 0x55, 0x18,   /* 0x82  e + acute  			 */\
    0x20, 0x52, 0x55, 0x56, 0x78,   /* 0x83  a + circumflex  		 */\
    0x20, 0x55, 0x54, 0x55, 0x78,   /* 0x84  a + umlaut  			 */\
    0x20, 0x55, 0x55, 0x56, 0x78,   /* 0x85  a + grave  			 */\
    0x20, 0x52, 0x55, 0x56, 0x78,   /* 0x86  a + ring  				 */\
    0x08, 0x54, 0x54, 0x74, 0x14,   /* 0x87  c + cedilla  			 */\
    0x38, 0x56, 0x55, 0x56, 0x18,   /* 0x88  e + circumflex  		 */\
    0x38, 0x55, 0x54, 0x55, 0x18,   /* 0x89  e + umlaut  			 */\
    0x38, 0x55, 0x55, 0x56, 0x18,   /* 0x8a  e + grave  			 */\
    0x00, 0x45, 0x7C, 0x41, 0x00,   /* 0x8b  i + umlaut  			 */\
    0x00, 0x4A, 0x79, 0x42, 0x00,   /* 0x8c  i + circumflex  		 */\
    0x00, 0x45, 0x7D, 0x42, 0x00,   /* 0x8d  i + grave  			 */\
    0x7D, 0x12, 0x12, 0x12, 0x7D,   /* 0x8e  A + umlaut  			 */\
    0x70, 0x2A, 0x25, 0x2A, 0x70,   /* 0x8f  A + ring  				 */\
    0x7C, 0x56, 0x55, 0x55, 0x44,   /* 0x90  E + acute  			 */\
    0x20, 0x54, 0x7C, 0x54, 0x58,   /* 0x91  ae merged  			 */\
    0x7E, 0x09, 0x7F, 0x49, 0x41,   /* 0x92  AE merged  			 */\
    0x38, 0x46, 0x45, 0x46, 0x38,   /* 0x93  o + circumflex  		 */\
    0x38, 0x45, 0x44, 0x45, 0x38,   /* 0x94  o + umlaut  			 */\
    0x38, 0x45, 0x45, 0x46, 0x38,   /* 0x95  o + grave  			 */\
    0x38, 0x42, 0x41, 0x22, 0x78,   /* 0x96  u + circumflex  		 */\
    0x3C, 0x41, 0x41, 0x22, 0x7C,   /* 0x97  u + grave  			 */\
    0x0C, 0x51, 0x50, 0x51, 0x3C,   /* 0x98  y + umlaut  			 */\
    0x3D, 0x42, 0x42, 0x42, 0x3D,   /* 0x99  O + umlaut  			 */\
    0x3D, 0x40, 0x40, 0x40, 0x3D,   /* 0x9a  U + umlaut  			 */\
    0x38, 0x64, 0x54, 0x4C, 0x38,   /* 0x9b  o + slash  			 */\
    0x7C, 0x10, 0x28, 0x44, 0x00,   /* 0x9c  Ka (Cyr) lowercase  	 */\
    0x3E, 0x51, 0x49, 0x45, 0x3E,   /* 0x9d  O + slash  			 */\
    0x7F, 0x49, 0x49, 0x49, 0x30,   /* 0x9e  Be (Cyr) uppercase  	 */\
    0x7C, 0x52, 0x49, 0x49, 0x31,   /* 0x9f  Be (Cyr) lowercase  	 */\
    0x20, 0x56, 0x55, 0x55, 0x78,   /* 0xa0  a + acute  			 */\
    0x00, 0x48, 0x7A, 0x41, 0x01,   /* 0xa1  i + acute  			 */\
    0x38, 0x46, 0x45, 0x45, 0x38,   /* 0xa2  o + acute  			 */\
    0x3C, 0x42, 0x41, 0x21, 0x7C,   /* 0xa3  u + acute  			 */\
    0x78, 0x12, 0x09, 0x0A, 0x79,   /* 0xa4  n + tilde  			 */\
    0x7C, 0x0A, 0x11, 0x22, 0x7D,   /* 0xa5  N + tilde  			 */\
    0x7F, 0x01, 0x01, 0x01, 0x01,   /* 0xa6  Ge (Cyr) uppercase  	 */\
    0x7C, 0x04, 0x04, 0x04, 0x04,   /* 0xa7  Ge (Cyr) lowercase  	 */\
    0x70, 0x2F, 0x21, 0x3F, 0x60,   /* 0xa8  De (Cyr) uppercase  	 */\
    0x70, 0x2C, 0x24, 0x3C, 0x60,   /* 0xa9  De (Cyr) lowercase  	 */\
    0x77, 0x08, 0x7F, 0x08, 0x77,   /* 0xaa  Zhe (Cyr) uppercase  	 */\
    0x6C, 0x10, 0x7C, 0x10, 0x6C,   /* 0xab  Zhe (Cyr) lowercase  	 */\
    0x22, 0x41, 0x49, 0x49, 0x36,   /* 0xac  Ze (Cyr) uppercase  	 */\
    0x28, 0x44, 0x54, 0x54, 0x28,   /* 0xad  Ze (Cyr) lowercase  	 */\
    0x7F, 0x08, 0x04, 0x02, 0x7F,   /* 0xae  I (Cyr) uppercase  	 */\
    0x7C, 0x20, 0x10, 0x08, 0x7C,   /* 0xaf  I (Cyr) lowercase  	 */\
    0x7C, 0x21, 0x12, 0x09, 0x7C,   /* 0xb0  Short I (Cyr) uppercase */\
    0x7C, 0x21, 0x12, 0x09, 0x7C,   /* 0xb1  Short I (Cyr) lowercase */\
    0x40, 0x3F, 0x01, 0x01, 0x7F,   /* 0xb2  El (Cyr) uppercase  	 */\
    0x40, 0x3C, 0x04, 0x04, 0x7C,   /* 0xb3  El (Cyr) lowercase  	 */\
    0x7C, 0x08, 0x10, 0x08, 0x7C,   /* 0xb4  Em (Cyr) lowercase  	 */\
    0x70, 0x2A, 0x25, 0x29, 0x70,   /* 0xb5  A + acute  			 */\
    0x70, 0x2A, 0x25, 0x2A, 0x70,   /* 0xb6  A + circumflex  		 */\
    0x70, 0x29, 0x25, 0x2A, 0x70,   /* 0xb7  A + grave  			 */\
    0x7F, 0x01, 0x01, 0x01, 0x7F,   /* 0xb8  Pe (Cyr) uppercase  	 */\
    0x7C, 0x04, 0x04, 0x04, 0x7C,   /* 0xb9  Pe (Cyr) lowercase  	 */\
    0x4F, 0x50, 0x20, 0x10, 0x0F,   /* 0xba  U (Cyr) uppercase  	 */\
    0x4C, 0x50, 0x20, 0x10, 0x0C,   /* 0xbb  U (Cyr) lowercase  	 */\
    0x1C, 0x22, 0x7F, 0x22, 0x1C,   /* 0xbc  Ef (Cyr) uppercase  	 */\
    0x18, 0x24, 0x7F, 0x24, 0x18,   /* 0xbd  Ef (Cyr) lowercase  	 */\
    0x3F, 0x20, 0x20, 0x3F, 0x60,   /* 0xbe  Tse (Cyr) uppercase  	 */\
    0x3C, 0x20, 0x20, 0x3C, 0x60,   /* 0xbf  Tse (Cyr) lowercase  	 */\
    0x07, 0x08, 0x08, 0x08, 0x7F,   /* 0xc0  Che (Cyr) uppercase  	 */\
    0x0C, 0x10, 0x10, 0x10, 0x7C,   /* 0xc1  Che (Cyr) lowercase  	 */\
    0x7F, 0x40, 0x7F, 0x40, 0x7F,   /* 0xc2  Sha (Cyr) uppercase  	 */\
    0x7C, 0x40, 0x7C, 0x40, 0x7C,   /* 0xc3  Sha (Cyr) lowercase  	 */\
    0x7F, 0x40, 0x7F, 0x40, 0xFF,   /* 0xc4  Shcha (Cyr) uppercase   */\
    0x7C, 0x40, 0x7C, 0x40, 0xFC,   /* 0xc5  Shcha (Cyr) lowercase   */\
    0x30, 0x4A, 0x49, 0x2A, 0x79,   /* 0xc6  a + tilde  			 */\
    0x70, 0x2A, 0x29, 0x2A, 0x71,   /* 0xc7  A + tilde  			 */\
    0x01, 0x7F, 0x44, 0x44, 0x38,   /* 0xc8  Yer (Cyr) uppercase  	 */\
    0x04, 0x7C, 0x50, 0x50, 0x20,   /* 0xc9  Yer (Cyr) lowercase  	 */\
    0x7F, 0x48, 0x30, 0x00, 0x7F,   /* 0xca  Yery (Cyr) uppercase  	 */\
    0x7C, 0x50, 0x20, 0x00, 0x7C,   /* 0xcb  Yery (Cyr) lowercase  	 */\
    0x7F, 0x44, 0x44, 0x38, 0x00,   /* 0xcc  Soft (Cyr) uppercase  	 */\
    0x7C, 0x50, 0x50, 0x20, 0x00,   /* 0xcd  Soft (Cyr) lowercase  	 */\
    0x22, 0x41, 0x49, 0x2A, 0x1C,   /* 0xce  E (Cyr) uppercase  	 */\
    0x28, 0x44, 0x54, 0x38, 0x00,   /* 0xcf  E (Cyr) lowercase  	 */\
    0x7F, 0x08, 0x3E, 0x41, 0x3E,   /* 0xd0  Yu (Cyr)  				 */\
    0x7C, 0x10, 0x38, 0x44, 0x38,   /* 0xd1  Yu (Cyr)  				 */\
    0x7C, 0x56, 0x55, 0x46, 0x44,   /* 0xd2  E + circumflex  		 */\
    0x7C, 0x55, 0x54, 0x45, 0x44,   /* 0xd3  E + umlaut  			 */\
    0x7C, 0x55, 0x55, 0x46, 0x44,   /* 0xd4  E + grave  			 */\
    0x7C, 0x10, 0x10, 0x10, 0x7C,   /* 0xd5  En (Cyr) lowercase  	 */\
    0x00, 0x46, 0x7D, 0x45, 0x00,   /* 0xd6  I + acute  			 */\
    0x00, 0x46, 0x7D, 0x46, 0x00,   /* 0xd7  I + circumflex  		 */\
    0x00, 0x45, 0x7C, 0x45, 0x00,   /* 0xd8  I + umlaut  			 */\
    0x46, 0x29, 0x19, 0x09, 0x7F,   /* 0xd9  Ya (Cyr) uppercase  	 */\
    0x00, 0x48, 0x34, 0x14, 0x7C,   /* 0xda  Ya (Cyr) lowercase  	 */\
    0x3E, 0x09, 0x09, 0xE9, 0xBE,   /* 0xdb  A + Ogonek  			 */\
    0x10, 0x2A, 0x2A, 0xEA, 0xBC,   /* 0xdc  a + Ogonek  			 */\
    0x7C, 0x54, 0x54, 0x54, 0x28,   /* 0xdd  Ve (Cyr) lowercase  	 */\
    0x00, 0x45, 0x7D, 0x46, 0x00,   /* 0xde  I + grave  			 */\
    0x04, 0x04, 0x7C, 0x04, 0x04,   /* 0xdf  Te (Cyr) lowercase  	 */\
    0x38, 0x46, 0x45, 0x45, 0x38,   /* 0xe0  O + acute  			 */\
    0x7F, 0x01, 0x25, 0x25, 0x1A,   /* 0xe1  beta or scharfes S  	 */\
    0x38, 0x46, 0x45, 0x46, 0x38,   /* 0xe2  O + circumflex  		 */\
    0x38, 0x45, 0x45, 0x46, 0x38,   /* 0xe3  O + grave  			 */\
    0x30, 0x4A, 0x49, 0x4A, 0x31,   /* 0xe4  o + tilde  			 */\
    0x38, 0x46, 0x45, 0x46, 0x39,   /* 0xe5  O + tilde  			 */\
    0x40, 0x3F, 0x08, 0x08, 0x1F,   /* 0xe6  mu  					 */\
    0x38, 0x46, 0x45, 0x45, 0x20,   /* 0xe7  C + acute  			 */\
    0x38, 0x46, 0x45, 0x45, 0x20,   /* 0xe8  c + acute  			 */\
    0x3C, 0x42, 0x41, 0x41, 0x3C,   /* 0xe9  U + acute  			 */\
    0x38, 0x42, 0x41, 0x42, 0x38,   /* 0xea  U + circumflex  		 */\
    0x3C, 0x41, 0x41, 0x42, 0x3C,   /* 0xeb  U + grave  			 */\
    0x0C, 0x52, 0x51, 0x51, 0x3C,   /* 0xec  y + acute  			 */\
    0x0C, 0x12, 0x61, 0x11, 0x0C,   /* 0xed  Y + acute  			 */\
    0x3F, 0x25, 0x25, 0xE5, 0xA1,   /* 0xee  E + Ogonek  			 */\
    0x1C, 0x2A, 0x2A, 0xEA, 0xAC,   /* 0xef  e + Ogonek  			 */\
    0x10, 0x08, 0x7F, 0x44, 0x42,   /* 0xf0  L + stroke  			 */\
    0x10, 0x49, 0x7F, 0x44, 0x02,   /* 0xf1  l + stroke  			 */\
    0x7C, 0x0A, 0x11, 0x21, 0x7C,   /* 0xf2  N + acute  			 */\
    0x78, 0x12, 0x09, 0x09, 0x70,   /* 0xf3  n + acute  			 */\
    0x48, 0x56, 0x55, 0x55, 0x24,   /* 0xf4  S + acute  			 */\
    0x48, 0x56, 0x55, 0x55, 0x20,   /* 0xf5  s + acute  			 */\
    0x44, 0x66, 0x55, 0x4D, 0x44,   /* 0xf6  Z + acute  			 */\
    0x44, 0x66, 0x55, 0x4D, 0x44,   /* 0xf7  z + acute  			 */\
    0x00, 0x07, 0x05, 0x07, 0x00,   /* 0xf8  degree  				 */\
    0x44, 0x64, 0x55, 0x4C, 0x44,   /* 0xf9  Z + single dot above  	 */\
    0x44, 0x64, 0x55, 0x4C, 0x44,   /* 0xfa  z + single dot above  	 */\
    0x0D, 0x10, 0x60, 0x10, 0x0D,   /* 0xfb  Y + umlaut  			 */\
    0x00, 0x00, 0x11, 0x15, 0x0A,   /* 0xfc  superscript 3  		 */\
    0x00, 0x00, 0x19, 0x15, 0x12    /* 0xfd  superscript 2  		 */

#define BIT_BATTERNS_0xA6_to_0xAB_TURKISH                              \
    0x08, 0x55, 0x56, 0x55, 0x3C,   /* 0xA6 TURKISH  g breve         */\
    0x00, 0x44, 0x7C, 0x40, 0x00,   /* 0xA7 TURKISH  i dotless       */\
    0x12, 0x55, 0x75, 0x15, 0x08,   /* 0xA8 TURKISH  s cedilla       */\
    0x00, 0x44, 0x7D, 0x44, 0x00,   /* 0xA9 TURKISH  I dotted        */\
    0x38, 0x45, 0x46, 0x55, 0x70,   /* 0xAA TURKISH  G breve         */\
    0x12, 0x55, 0x75, 0x15, 0x08    /* 0xAB TURKISH  S cedilla       */

#define BIT_BATTERNS_0xA1_to_0xDF_KATAKANA                             \
    0x70, 0x50, 0x70, 0x00, 0x00,   /* 0xA1 Katakana                 */\
    0x00, 0x00, 0x07, 0x01, 0x01,   /* 0xA2 Katakana                 */\
    0x40, 0x40, 0x70, 0x00, 0x00,   /* 0xA3 Katakana                 */\
    0x10, 0x20, 0x40, 0x00, 0x00,   /* 0xA4 Katakana                 */\
    0x00, 0x18, 0x18, 0x00, 0x00,   /* 0xA5 Katakana dot             */\
    0x0A, 0x0A, 0x4A, 0x2A, 0x1E,   /* 0xA6 Katakana wo              */\
    0x04, 0x44, 0x34, 0x14, 0x0C,   /* 0xA7 Katakana hu (small)      */\
    0x20, 0x10, 0x78, 0x04, 0x00,   /* 0xA8 Katakana I(small)        */\
    0x18, 0x08, 0x4C, 0x48, 0x38,   /* 0xA9 Katakana u(small)        */\
    0x44, 0x44, 0x7C, 0x44, 0x44,   /* 0xAA Katakana e(small)        */\
    0x48, 0x28, 0x18, 0x7C, 0x08,   /* 0xAB Katakana o(small)        */\
    0x08, 0x7C, 0x08, 0x28, 0x18,   /* 0xAC Katakana ya(small)       */\
    0x40, 0x48, 0x48, 0x78, 0x40,   /* 0xAD Katakana yu(small)       */\
    0x54, 0x54, 0x54, 0x7C, 0x00,   /* 0xAE Katakana yo(small)       */\
    0x18, 0x00, 0x58, 0x40, 0x38,   /* 0xAF Katakana tu(small)       */\
    0x08, 0x08, 0x08, 0x08, 0x08,   /* 0xB0 Katakana -               */\
    0x01, 0x41, 0x3D, 0x09, 0x07,   /* 0xB1 Katakana a               */\
    0x10, 0x08, 0x7C, 0x02, 0x01,   /* 0xB2 Katakana I               */\
    0x0E, 0x02, 0x43, 0x22, 0x1E,   /* 0xB3 Katakana u               */\
    0x42, 0x42, 0x7E, 0x42, 0x42,   /* 0xB4 Katakana e               */\
    0x22, 0x12, 0x0A, 0x7F, 0x02,   /* 0xB5 Katakana o               */\
    0x42, 0x3F, 0x02, 0x42, 0x3E,   /* 0xB6 Katakana ka              */\
    0x0A, 0x0A, 0x7F, 0x0A, 0x0A,   /* 0xB7 Katakana ki              */\
    0x08, 0x46, 0x42, 0x22, 0x1E,   /* 0xB8 Katakana ku              */\
    0x04, 0x03, 0x42, 0x3E, 0x02,   /* 0xB9 Katakana ke              */\
    0x42, 0x42, 0x42, 0x42, 0x7E,   /* 0xBA Katakana ko              */\
    0x02, 0x4F, 0x22, 0x1F, 0x02,   /* 0xBB Katakana sa              */\
    0x4A, 0x4A, 0x40, 0x20, 0x1C,   /* 0xBC Katakana shi             */\
    0x42, 0x22, 0x12, 0x2A, 0x46,   /* 0xBD Katakana su              */\
    0x02, 0x3F, 0x42, 0x4A, 0x46,   /* 0xBE Katakana se              */\
    0x06, 0x48, 0x40, 0x20, 0x1E,   /* 0xBF Katakana so              */\
    0x08, 0x46, 0x4A, 0x32, 0x1E,   /* 0xC0 Katakana ta              */\
    0x0A, 0x4A, 0x3E, 0x09, 0x08,   /* 0xC1 Katakana chi             */\
    0x0E, 0x00, 0x4E, 0x20, 0x1E,   /* 0xC2 Katakana tu              */\
    0x04, 0x45, 0x3D, 0x05, 0x04,   /* 0xC3 Katakana te              */\
    0x00, 0x7F, 0x08, 0x10, 0x00,   /* 0xC4 Katakana to              */\
    0x44, 0x24, 0x1F, 0x04, 0x04,   /* 0xC5 Katakana na              */\
    0x40, 0x42, 0x42, 0x42, 0x40,   /* 0xC6 Katakana ni              */\
    0x42, 0x2A, 0x12, 0x2A, 0x06,   /* 0xC7 Katakana nu              */\
    0x22, 0x12, 0x7B, 0x16, 0x22,   /* 0xC8 Katakana ne              */\
    0x00, 0x40, 0x20, 0x1F, 0x00,   /* 0xC9 Katakana no              */\
    0x78, 0x00, 0x02, 0x04, 0x78,   /* 0xCA Katakana ha              */\
    0x3F, 0x44, 0x44, 0x44, 0x44,   /* 0xCB Katakana hi              */\
    0x02, 0x42, 0x42, 0x22, 0x1E,   /* 0xCC Katakana hu              */\
    0x04, 0x02, 0x04, 0x08, 0x30,   /* 0xCD Katakana he              */\
    0x32, 0x02, 0x7F, 0x02, 0x32,   /* 0xCE Katakana ho              */\
    0x02, 0x12, 0x22, 0x52, 0x0E,   /* 0xCF Katakana ma              */\
    0x00, 0x2A, 0x2A, 0x2A, 0x40,   /* 0xD0 Katakana mi              */\
    0x38, 0x24, 0x22, 0x20, 0x70,   /* 0xD1 Katakana mu              */\
    0x40, 0x28, 0x10, 0x28, 0x06,   /* 0xD2 Katakana me              */\
    0x0A, 0x3E, 0x4A, 0x4A, 0x4A,   /* 0xD3 Katakana mo              */\
    0x04, 0x7F, 0x04, 0x14, 0x0C,   /* 0xD4 Katakana ya              */\
    0x40, 0x42, 0x42, 0x7E, 0x40,   /* 0xD5 Katakana yu              */\
    0x4A, 0x4A, 0x4A, 0x4A, 0x7E,   /* 0xD6 Katakana yo              */\
    0x04, 0x05, 0x45, 0x25, 0x1C,   /* 0xD7 Katakana ra              */\
    0x0F, 0x40, 0x20, 0x1F, 0x00,   /* 0xD8 Katakana ri              */\
    0x7C, 0x00, 0x7F, 0x40, 0x30,   /* 0xD9 Katakana ru              */\
    0x7E, 0x40, 0x20, 0x10, 0x08,   /* 0xDA Katakana re              */\
    0x7E, 0x42, 0x42, 0x42, 0x7E,   /* 0xDB Katakana ro              */\
    0x0E, 0x02, 0x42, 0x22, 0x1E,   /* 0xDC Katakana wa              */\
    0x42, 0x42, 0x40, 0x20, 0x18,   /* 0xDD Katakana n               */\
    0x02, 0x04, 0x01, 0x02, 0x00,   /* 0xDE Katakana                 */\
    0x07, 0x05, 0x07, 0x00, 0x00    /* 0xDF Katakana                 */

#define BIT_BATTERNS_0x8A_to_0x9A_RUSSIAN                              \
    0x7E, 0x11, 0x11, 0x11, 0x7E,   /* 0x8A Cyrillic Uppercase A     */\
    0x7F, 0x49, 0x49, 0x49, 0x36,   /* 0x8B Cyrillic Uppercase Ve    */\
    0x7F, 0x49, 0x49, 0x49, 0x41,   /* 0x8C Cyrillic Uppercase Io    */\
    0x7F, 0x08, 0x14, 0x22, 0x41,   /* 0x8D Cyrillic Uppercase Ka    */\
    0x7F, 0x02, 0x0C, 0x02, 0x7F,   /* 0x8E Cyrillic Uppercase Em    */\
    0x7F, 0x08, 0x08, 0x08, 0x7F,   /* 0x8F Cyrillic Uppercase En    */\
    0x3E, 0x41, 0x41, 0x41, 0x3E,   /* 0x90 Cyrillic Uppercase O     */\
    0x7F, 0x09, 0x09, 0x09, 0x06,   /* 0x91 Cyrillic Uppercase Er    */\
    0x3E, 0x41, 0x41, 0x41, 0x22,   /* 0x92 Cyrillic Uppercase Es    */\
    0x01, 0x01, 0x7F, 0x01, 0x01,   /* 0x93 Cyrillic Uppercase Te    */\
    0x20, 0x54, 0x54, 0x54, 0x78,   /* 0x94 Cyrillic Lowercase A     */\
    0x38, 0x54, 0x54, 0x54, 0x18,   /* 0x95 Cyrillic Lowercase Ie    */\
    0x38, 0x44, 0x44, 0x44, 0x38,   /* 0x96 Cyrillic Lowercase O     */\
    0x7C, 0x14, 0x14, 0x14, 0x08,   /* 0x97 Cyrillic Lowercase Er    */\
    0x38, 0x44, 0x44, 0x44, 0x20,   /* 0x98 Cyrillic Lowercase Es    */\
    0x44, 0x28, 0x10, 0x28, 0x44,   /* 0x99 Cyrillic Lowercase Ha    */\
    0x63, 0x14, 0x08, 0x14, 0x63	/* 0x9A Cyrillic Uppercase Ha    */

#define BIT_PATTERNS_0xA0_to_0xFF_LATIN1                              \
    0x00, 0x00, 0x00, 0x00, 0x00,   /* 0xA0 non breaking space      */\
    0x00, 0x00, 0x7D, 0x00, 0x00,   /* 0xA1 inverted exclamation    */\
    0x1C, 0x22, 0x7F, 0x22, 0x10,   /* 0xA2 cent (currency)         */\
    0x48, 0x7E, 0x49, 0x49, 0x42,   /* 0xA3 pound Sign              */\
    0x22, 0x08, 0x14, 0x08, 0x22,   /* 0xA4 currency symbol         */\
    0x29, 0x2A, 0x7C, 0x2A, 0x29,   /* 0xA5 yen symbol              */\
    0x00, 0x00, 0x77, 0x00, 0x00,   /* 0xA6 vertical bar            */\
    0x26, 0x4D, 0x55, 0x59, 0x32,   /* 0xA7 section sign            */\
    0x00, 0x01, 0x00, 0x01, 0x00,   /* 0xA8 umlaut                  */\
    0x00, 0x3E, 0x22, 0x22, 0x00,   /* 0xA9 copyright symbol        */\
    0x08, 0x15, 0x15, 0x15, 0x1E,   /* 0xAA superscript a           */\
    0x08, 0x14, 0x00, 0x08, 0x14,   /* 0xAB guillemets <<           */\
    0x04, 0x04, 0x04, 0x04, 0x1C,   /* 0xAC negation symbol         */\
    0x08, 0x08, 0x08, 0x08, 0x08,   /* 0xAD soft hyphen             */\
    0x00, 0x3E, 0x0A, 0x34, 0x00,   /* 0xAE reg'd trademark symbol  */\
    0x01, 0x01, 0x01, 0x01, 0x01,   /* 0xAF Macron                  */\
    0x00, 0x07, 0x05, 0x07, 0x00,   /* 0xB0 degree symbol           */\
    0x44, 0x44, 0x5F, 0x44, 0x44,   /* 0xB1 plus/minus sign         */\
    0x00, 0x00, 0x19, 0x15, 0x12,   /* 0xB2 superscript 2           */\
    0x00, 0x00, 0x11, 0x15, 0x0A,   /* 0xB3 superscript 3           */\
    0x00, 0x02, 0x01, 0x01, 0x00,   /* 0xB4 acute                   */\
    0x40, 0x3F, 0x08, 0x08, 0x1F,   /* 0xB5 mu                      */\
    0x06, 0x0F, 0x7F, 0x01, 0x7F,   /* 0xB6 pilcrow                 */\
    0x00, 0x00, 0x08, 0x00, 0x00,   /* 0xB7 interpunct              */\
    0x00, 0x40, 0x40, 0x50, 0x20,   /* 0xB8 cedilla                 */\
    0x00, 0x00, 0x12, 0x1F, 0x10,   /* 0xB9 superscript 1           */\
    0x0E, 0x11, 0x11, 0x11, 0x0E,   /* 0xBA superscript o           */\
    0x14, 0x08, 0x00, 0x14, 0x08,   /* 0xBB guillemets >>           */\
    0x22, 0x1F, 0x28, 0x34, 0x7A,   /* 0xBC quarter                 */\
    0x22, 0x1F, 0x08, 0x6C, 0x5A,   /* 0xBD half                    */\
    0x35, 0x1F, 0x28, 0x34, 0x7A,   /* 0xBE three quarters          */\
    0x30, 0x48, 0x45, 0x40, 0x20,   /* 0xBF inverted question mark  */\
    0x70, 0x29, 0x29, 0x2A, 0x70,   /* 0xC0 A grave                 */\
    0x70, 0x2A, 0x29, 0x29, 0x70,   /* 0xC1 A acute                 */\
    0x70, 0x2A, 0x29, 0x2A, 0x70,   /* 0xC2 A circumflex            */\
    0x70, 0x2A, 0x29, 0x2A, 0x71,   /* 0xC3 A tilde                 */\
    0x7D, 0x12, 0x12, 0x12, 0x7D,   /* 0xC4 A umlaut                */\
    0x70, 0x2A, 0x2D, 0x2A, 0x70,   /* 0xC5 A ring                  */\
    0x7E, 0x09, 0x7F, 0x49, 0x41,   /* 0xC6 AE merged               */\
    0x0E, 0x51, 0x51, 0x71, 0x0A,   /* 0xC7 C cedilla               */\
    0x7C, 0x55, 0x55, 0x46, 0x44,   /* 0xC8 E grave                 */\
    0x7C, 0x56, 0x55, 0x45, 0x44,   /* 0xC9 E acute                 */\
    0x7C, 0x56, 0x55, 0x46, 0x44,   /* 0xCA E cedilla               */\
    0x7C, 0x55, 0x54, 0x45, 0x44,   /* 0xCB E umlaut                */\
    0x00, 0x45, 0x7D, 0x46, 0x00,   /* 0xCC I grave                 */\
    0x00, 0x46, 0x7D, 0x45, 0x00,   /* 0xCD I acute                 */\
    0x00, 0x46, 0x7D, 0x46, 0x00,   /* 0xCE I circumflex            */\
    0x00, 0x45, 0x7C, 0x45, 0x00,   /* 0xCF I umlaut                */\
    0x08, 0x7F, 0x49, 0x22, 0x1C,   /* 0xD0 uppercase Eth           */\
    0x7C, 0x0A, 0x11, 0x22, 0x7D,   /* 0xD1 N tilde                 */\
    0x38, 0x45, 0x45, 0x46, 0x38,   /* 0xD2 O grave                 */\
    0x38, 0x46, 0x45, 0x45, 0x38,   /* 0xD3 O acute                 */\
    0x38, 0x46, 0x45, 0x46, 0x38,   /* 0xD4 O circumflex            */\
    0x38, 0x46, 0x45, 0x46, 0x39,   /* 0xD5 O tilde                 */\
    0x3D, 0x42, 0x42, 0x42, 0x3D,   /* 0xD6 O umlaut                */\
    0x22, 0x14, 0x08, 0x14, 0x22,   /* 0xD7 multiplication symbol   */\
    0x3E, 0x51, 0x49, 0x45, 0x3E,   /* 0xD8 O slash                 */\
    0x3C, 0x41, 0x41, 0x42, 0x3C,   /* 0xD9 U grave                 */\
    0x3C, 0x42, 0x41, 0x41, 0x3C,   /* 0xDA U acute                 */\
    0x38, 0x42, 0x41, 0x42, 0x38,   /* 0xDB U circumflex            */\
    0x3D, 0x40, 0x40, 0x40, 0x3D,   /* 0xDC U umlaut                */\
    0x04, 0x0A, 0x71, 0x09, 0x04,   /* 0xDD Y acute                 */\
    0x7F, 0x55, 0x14, 0x08, 0x00,   /* 0xDE thorn                   */\
    0x7E, 0x01, 0x25, 0x25, 0x1A,   /* 0xDF scharfes s              */\
    0x20, 0x55, 0x55, 0x56, 0x78,   /* 0xE0 a grave                 */\
    0x20, 0x56, 0x55, 0x55, 0x78,   /* 0xE1 a acute                 */\
    0x20, 0x52, 0x55, 0x56, 0x78,   /* 0xE2 a circumflex            */\
    0x20, 0x56, 0x55, 0x56, 0x79,   /* 0xE3 a tilde                 */\
    0x20, 0x55, 0x54, 0x55, 0x78,   /* 0xE4 a umlaut                */\
    0x20, 0x52, 0x55, 0x56, 0x78,   /* 0xE5 a ring                  */\
    0x20, 0x54, 0x7C, 0x54, 0x58,   /* 0xE6 ae merged               */\
    0x08, 0x54, 0x54, 0x74, 0x14,   /* 0xE7 c cedilla               */\
    0x38, 0x55, 0x55, 0x56, 0x18,   /* 0xE8 e grave                 */\
    0x38, 0x56, 0x55, 0x55, 0x18,   /* 0xE9 e acute                 */\
    0x38, 0x56, 0x55, 0x56, 0x18,   /* 0xEA e circumflex            */\
    0x38, 0x55, 0x54, 0x55, 0x18,   /* 0xEB e umlaut                */\
    0x00, 0x49, 0x79, 0x42, 0x00,   /* 0xEC i grave                 */\
    0x00, 0x4A, 0x79, 0x41, 0x00,   /* 0xED i acute                 */\
    0x00, 0x4A, 0x79, 0x42, 0x00,   /* 0xEE i circumflex            */\
    0x00, 0x45, 0x7C, 0x41, 0x00,   /* 0xEF i umlaut                */\
    0x20, 0x55, 0x52, 0x55, 0x38,   /* 0xF0 lowercase Eth           */\
    0x78, 0x12, 0x09, 0x0A, 0x71,   /* 0xF1 n tilde                 */\
    0x38, 0x45, 0x45, 0x46, 0x38,   /* 0xF2 o grave                 */\
    0x38, 0x46, 0x45, 0x45, 0x38,   /* 0xF3 o acute                 */\
    0x38, 0x46, 0x45, 0x46, 0x38,   /* 0xF4 o curcumflex            */\
    0x30, 0x4A, 0x49, 0x4A, 0x31,   /* 0xF5 o tilde                 */\
    0x38, 0x45, 0x44, 0x45, 0x38,   /* 0xF6 o umlaut                */\
    0x08, 0x08, 0x2A, 0x08, 0x08,   /* 0xF7 division symbol         */\
    0x38, 0x64, 0x54, 0x4C, 0x38,   /* 0xF8 o slash                 */\
    0x3C, 0x41, 0x41, 0x22, 0x7C,   /* 0xF9 u grave                 */\
    0x3C, 0x42, 0x41, 0x21, 0x7C,   /* 0xFA u acute                 */\
    0x38, 0x42, 0x41, 0x22, 0x78,   /* 0xFB u circumflex            */\
    0x3C, 0x41, 0x40, 0x21, 0x7C,   /* 0xFC u umlaut                */\
    0x0C, 0x52, 0x51, 0x51, 0x3C,   /* 0xFD y acute                 */\
    0x7F, 0x22, 0x22, 0x1C, 0x00,   /* 0xFE thorn                   */\
    0x0C, 0x51, 0x50, 0x51, 0x3C    /* 0xFF y umlaut                */\

#define FONT_2_SMOOTH_MINUS                                 \
    {{0x01, 0x01, 0x01, 0x01, 0x01, 0x00}, /* Bottom line */\
     {0x80, 0x80, 0x80, 0x80, 0x80, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_DP                                    \
    {{0x00, 0x00, 0x78, 0x78, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_FWD_SLASH                             \
    {{0x18, 0x06, 0x01, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x80, 0x60, 0x18, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_0                                     \
    {{0x1F, 0x66, 0x61, 0x60, 0x1F, 0x00}, /* Bottom line */\
     {0xF8, 0x06, 0x86, 0x66, 0xF8, 0x00}}  /* Top line    */

#define FONT_2_SMOOTH_1                                     \
    {{0x00, 0x60, 0x7F, 0x60, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x18, 0xFE, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_2                                     \
    {{0x60, 0x78, 0x66, 0x61, 0x60, 0x00}, /* Bottom line */\
     {0x18, 0x06, 0x06, 0x86, 0x78, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_3                                     \
    {{0x18, 0x61, 0x61, 0x61, 0x1E, 0x00}, /* Bottom line */\
     {0x06, 0x86, 0xE6, 0x9E, 0x06, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_4                                     \
    {{0x03, 0x03, 0x03, 0x7F, 0x03, 0x00}, /* Bottom line */\
     {0xC0, 0x30, 0x0C, 0xFE, 0x00, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_5                                     \
    {{0x18, 0x60, 0x60, 0x60, 0x1F, 0x00}, /* Bottom line */\
     {0x7E, 0x66, 0x66, 0x66, 0x86, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_6                                     \
    {{0x1F, 0x61, 0x61, 0x61, 0x1E, 0x00}, /* Bottom line */\
     {0xE0, 0x98, 0x86, 0x86, 0x00, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_7                                     \
    {{0x00, 0x7E, 0x01, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x06, 0x06, 0x86, 0x66, 0x1E, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_8                                     \
    {{0x1E, 0x61, 0x61, 0x61, 0x1E, 0x00}, /* Bottom line */\
     {0x78, 0x86, 0x86, 0x86, 0x78, 0x00}} /* Top line    */

#define FONT_2_SMOOTH_9                                     \
    {{0x00, 0x61, 0x61, 0x19, 0x07, 0x00}, /* Bottom line */\
     {0x78, 0x86, 0x86, 0x86, 0xF8, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_MINUS                                                                                                         \
    {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_DP                                                                                                            \
    {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E, 0x7E, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_FWD_SLASH                                                                                                     \
    {{0x0E, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x70, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_0                                                                                                             \
    {{0x03, 0x0F, 0x1F, 0x3F, 0x79, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3E, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0xFF, 0xFF, 0xFF, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x03, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00}, /*             */\
     {0x80, 0xE0, 0xF0, 0xF8, 0x3C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xBC, 0xF8, 0xF0, 0xE0, 0x80, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_1                                                                                                             \
    {{0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x7F, 0x7F, 0x7F, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_2                                                                                                             \
    {{0x70, 0x78, 0x7C, 0x7E, 0x7F, 0x77, 0x73, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00}, /*             */\
     {0xE0, 0xF0, 0xF8, 0x3C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3C, 0xF8, 0xF0, 0xE0, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_3                                                                                                             \
    {{0x0E, 0x1E, 0x3E, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3F, 0x1F, 0x0F, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x18, 0x1C, 0x1E, 0x1F, 0x1F, 0x1F, 0x1D, 0x1C, 0x3C, 0xF8, 0xF0, 0xE0, 0x00, 0x00, 0x00}, /*             */\
     {0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x9C, 0xDC, 0xFC, 0xFC, 0x7C, 0x3C, 0x1C, 0x0C, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_4                                                                                                             \
    {{0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x7F, 0x7F, 0x7F, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0xF0, 0xF8, 0xFC, 0xDE, 0xCF, 0xC7, 0xC3, 0xC1, 0xC0, 0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_5                                                                                                             \
    {{0x0E, 0x1E, 0x3E, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3F, 0x1F, 0x0F, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x0F, 0x0F, 0x0F, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x1E, 0xFC, 0xF8, 0xF0, 0x00, 0x00, 0x00}, /*             */\
     {0xFC, 0xFC, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_6                                                                                                             \
    {{0x0F, 0x1F, 0x3F, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3F, 0x1F, 0x0F, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0xFE, 0xFF, 0xFF, 0x73, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x78, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x78, 0x38, 0x3C, 0x1C, 0x1C, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_7                                                                                                             \
    {{0x00, 0x00, 0x00, 0x60, 0x78, 0x7E, 0x3F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xFC, 0x3F, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xDC, 0xFC, 0xFC, 0x7C, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_8                                                                                                             \
    {{0x0F, 0x1F, 0x3F, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3F, 0x1F, 0x0F, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0xC7, 0xEF, 0xFF, 0x7C, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x7C, 0xFF, 0xEF, 0xC7, 0x00, 0x00, 0x00}, /*             */\
     {0xE0, 0xF0, 0xF8, 0x3C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3C, 0xF8, 0xF0, 0xE0, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_4_SMOOTH_9                                                                                                             \
    {{0x00, 0x00, 0x00, 0x60, 0x60, 0x70, 0x70, 0x38, 0x38, 0x1C, 0x1E, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x07, 0x0F, 0x1F, 0x3C, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x9C, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00}, /*             */\
     {0xE0, 0xF0, 0xF8, 0x3C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3C, 0xF8, 0xF0, 0xE0, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_MINUS                                                                                                                                             \
    {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_DP                                                                                                                                                \
    {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x3F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_FWD_SLASH                                                                                                                                         \
    {{0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0x7C, 0x3E, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0x7C, 0x3E, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_0                                                                                                                                                 \
    {{0x00, 0x01, 0x07, 0x0F, 0x1F, 0x3F, 0x7E, 0x7C, 0x78, 0x78, 0x78, 0x78, 0x7C, 0x7E, 0x3F, 0x1F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x7F, 0xFF, 0xFF, 0xFF, 0xF0, 0xF8, 0x7C, 0x3E, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0xF8, 0xFE, 0xFF, 0xFF, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF9, 0x7F, 0x3F, 0xFF, 0xFF, 0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xF8, 0x78, 0x78, 0x78, 0x78, 0xF8, 0xF8, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_1                                                                                                                                                 \
    {{0x00, 0x00, 0x00, 0x00, 0x78, 0x78, 0x78, 0x78, 0x7F, 0x7F, 0x7F, 0x7F, 0x78, 0x78, 0x78, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_2                                                                                                                                                 \
    {{0x70, 0x78, 0x7C, 0x7E, 0x7F, 0x7F, 0x7F, 0x7B, 0x79, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0x7C, 0x3E, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x07, 0x07, 0x07, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE1, 0xFF, 0xFF, 0x7F, 0x1F, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0xC0, 0xE0, 0xF0, 0xF0, 0xF8, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_3                                                                                                                                                 \
    {{0x03, 0x0F, 0x1F, 0x3F, 0x3E, 0x7C, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x7C, 0x3E, 0x3F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x80, 0x80, 0x80, 0x80, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x1F, 0xFF, 0xFE, 0xFC, 0xF0, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xBE, 0x9F, 0x8F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0x78, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_4                                                                                                                                                 \
    {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x7F, 0x7F, 0x7F, 0x7B, 0x79, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0xFF, 0xFF, 0xFF, 0xFF, 0x78, 0x78, 0x78, 0x78, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0x7C, 0x3E, 0x1F, 0x0F, 0x07, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_5                                                                                                                                                 \
    {{0x03, 0x0F, 0x1F, 0x3F, 0x3E, 0x7C, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x7C, 0x3E, 0x3F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x81, 0x81, 0x81, 0x81, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x07, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0xF8, 0xF8, 0xF8, 0xF8, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_6                                                                                                                                                 \
    {{0x03, 0x0F, 0x1F, 0x3F, 0x3E, 0x7C, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x7C, 0x3E, 0x3F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x1F, 0xFF, 0xFE, 0xFC, 0xF0, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0xE0, 0xF8, 0xFE, 0xFF, 0x1F, 0x87, 0x83, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xE0, 0xF0, 0x70, 0x78, 0x38, 0x38, 0x38, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_7                                                                                                                                                 \
    {{0x00, 0x00, 0x00, 0x00, 0x60, 0x78, 0x7E, 0x7F, 0x3F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFC, 0xFF, 0x3F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0xFF, 0x7F, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0xF8, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_8                                                                                                                                                 \
    {{0x03, 0x0F, 0x1F, 0x3F, 0x3E, 0x7C, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x7C, 0x3E, 0x3F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0xF0, 0xF8, 0xFC, 0xFF, 0x1F, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x1F, 0xFF, 0xFC, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x3F, 0x7F, 0xFF, 0xFF, 0xE1, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xE1, 0xFF, 0xFF, 0x7F, 0x3F, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0xC0, 0xE0, 0xF0, 0xF0, 0xF8, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

#define FONT_5_SMOOTH_9                                                                                                                                                 \
    {{0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x70, 0x70, 0x70, 0x78, 0x38, 0x3C, 0x1E, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* Bottom line */\
     {0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x87, 0xE3, 0xFF, 0xFF, 0x7F, 0x1F, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x3F, 0xFF, 0xFF, 0xFF, 0xE1, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00}, /*             */\
     {0x00, 0xC0, 0xE0, 0xF0, 0xF0, 0xF8, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00}} /* Top line    */

//----------------------------------------------------------------------------------------------------------
// STANDARD FONT TABLES
//----------------------------------------------------------------------------------------------------------
#if defined(TYPE_5_IMPLEMENTATION) || defined(TYPE_4_IMPLEMENTATION)

    //---------------------------------------------------------------
    // Implementation type 5 or type 4

    const TUSIGN8 FontUpper[] =
    {
    // Top page Bit Patterns for Characters 0x01 to 0xFD
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0x01  o + acute,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0x02  i + acute,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0x03  u + acute,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0x04  a + acute,
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0x05  a + ring,
    0x00, 0x80, 0xC0, 0xF0, 0xF8, 0xF8, 0xF0, 0xC0, 0x80, 0x00, // 0x06  up arrow,
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 0x07  down arrow,
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0x08  three bars,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x09  three dots,
    0xC0, 0xF0, 0x38, 0x38, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, // 0x0a  AE merged,
    0x00, 0x00, 0x00, 0x00, 0xF0, 0xF8, 0x38, 0x38, 0xF8, 0xF0, // 0x0b  degree,
    0x00, 0xC0, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0xC0, 0x00, // 0x0c  A + umlaut,
    0x00, 0xC0, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0xC0, 0x00, // 0x0d  O + umlaut,
    0xE0, 0xE0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0xE0, // 0x0e  U + umlaut,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0x0f  a + umlaut,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0x10  o + umlaut,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0x11  u + umlaut,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0x12  e + acute,
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0x13  e + grave,
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0x14  e + circumflex,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x15  c + cedilla,
    0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, // 0x16  omega,
    0x38, 0x78, 0xF8, 0xF8, 0xB8, 0x38, 0x38, 0x38, 0x38, 0x38, // 0x17  epsilon,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x18  micro,
    0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x19  superscript 2,
    0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x38, 0xB8, 0xF0, 0x40, // 0x1a  superscript 3,
    0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, // 0x1b  ae merged,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, 0x00, // 0x1c  beta,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x1d  N + tilde,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x1e  n + tilde,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x1f  o + slash,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x20  space,
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 0x21  !,
    0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, // 0x22  double quotes,
    0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, // 0x23  #,
    0x00, 0x80, 0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0xC0, // 0x24  $,
    0xF8, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, // 0x25  %,
    0xC0, 0xF0, 0x38, 0x08, 0x08, 0x38, 0xF0, 0xC0, 0x00, 0x00, // 0x26  &,
    0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0xF8, 0xF8, 0x00, 0x00, // 0x27  ',
    0x00, 0x00, 0x00, 0xC0, 0xE0, 0x70, 0x38, 0x38, 0x00, 0x00, // 0x28  (,
    0x00, 0x00, 0x38, 0x38, 0x70, 0xE0, 0xC0, 0x00, 0x00, 0x00, // 0x29  ),
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, // 0x2a  *,
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, // 0x2b  +,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x2c  comma,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x2d  -,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x2e  .,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, // 0x2f  forward slash,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x30  0,
    0x00, 0x00, 0xC0, 0xC0, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 0x31  1,
    0xE0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xE0, // 0x32  2,
    0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xB8, 0xF8, 0x78, 0x38, // 0x33  3,
    0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xF8, 0x00, 0x00, // 0x34  4,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, // 0x35  5,
    0x00, 0x80, 0xC0, 0x70, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, // 0x36  6,
    0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xB8, 0xF8, 0x78, // 0x37  7,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x38  8,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x39  9,
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, // 0x3a  :,
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, // 0x3b  ;,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x38, 0x38, // 0x3c  <,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x3d  =,
    0x00, 0x00, 0x38, 0x38, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, // 0x3e  >,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x3f  ?,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x40  @,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x41  A,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x42  B,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x43  C,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x70, 0xC0, 0x80, 0x00, // 0x44  D,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, // 0x45  E,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, // 0x46  F,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x47  G,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x48  H,
    0x00, 0x00, 0x38, 0x38, 0xF8, 0xF8, 0x38, 0x38, 0x00, 0x00, // 0x49  I,
    0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0xF8, 0xF8, 0x38, 0x38, // 0x4a  J,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x80, 0xC0, 0x60, 0x38, 0x18, // 0x4b  K,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x4c  L,
    0xF8, 0xF8, 0x70, 0xC0, 0x00, 0x00, 0xC0, 0x70, 0xF8, 0xF8, // 0x4d  M,
    0xF8, 0xF8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x4e  N,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x4f  O,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x50  P,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x51  Q,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x52  R,
    0xE0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, // 0x53  S,
    0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, // 0x54  T,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x55  U,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x56  V,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x57  W,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x58  X,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x59  Y,
    0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xB8, 0xF8, 0x78, // 0x5a  Z,
    0x00, 0x00, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, // 0x5b  [,
    0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x5c  back slash,
    0x00, 0x00, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, 0x00, 0x00, // 0x5d  ],
    0x00, 0x80, 0xC0, 0xE0, 0x38, 0x38, 0xE0, 0xC0, 0x80, 0x00, // 0x5e  ^,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x5f  _,
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x38, 0x38, 0x00, 0x00, // 0x60  `,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x61  a,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x62  b,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x63  c,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x64  d,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x65  e,
    0x00, 0x00, 0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x66  f,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x67  g,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x68  h,
    0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, // 0x69  i,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, // 0x6a  j,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x6b  k,
    0x00, 0x00, 0x38, 0x38, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 0x6c  l,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x6d  m,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x6e  n,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x6f  o,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x70  p,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x71  q,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x72  r,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x73  s,
    0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, // 0x74  t,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x75  u,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x76  v,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x77  w,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x78  x,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x79  y,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x7a  z,
    0x00, 0x00, 0xC0, 0xF0, 0x78, 0x38, 0x38, 0x38, 0x00, 0x00, // 0x7b  {,
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 0x7c  |,
    0x00, 0x00, 0x38, 0x38, 0x38, 0x78, 0xF0, 0xC0, 0x00, 0x00, // 0x7d  },
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x7e  ~,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x7f  not recognised,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x80  C + cedilla,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0x81  u + umlaut,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0x82  e + acute,
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0x83  a + circumflex,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0x84  a + umlaut,
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0x85  a + grave,
    0x00, 0x00, 0x00, 0x30, 0x48, 0x48, 0x30, 0x00, 0x00, 0x00, // 0x86  a + ring,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x87  c + cedilla,
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0x88  e + circumflex,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0x89  e + umlaut,
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0x8a  e + grave,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, // 0x8b  i + umlaut,
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0x8c  i + circumflex,
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0x8d  i + grave,
    0x00, 0xC0, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0xC0, 0x00, // 0x8e  A + umlaut,
    0x00, 0xC0, 0xE0, 0xE4, 0xEA, 0xEA, 0xE4, 0xE0, 0xC0, 0x00, // 0x8f  A + ring,
    0xE0, 0xE0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xE0, 0xE0, // 0x90  E + acute,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x91  ae merged,
    0xC0, 0xF0, 0x38, 0x38, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, // 0x92  AE merged,
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0x93  o + circumflex,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0x94  o + umlaut,
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0x95  o + grave,
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0x96  u + circumflex,
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0x97  u + grave,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0x98  y + umlaut,
    0x00, 0xC0, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0xC0, 0x00, // 0x99  O + umlaut,
    0xE0, 0xE0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0xE0, // 0x9a  U + umlaut,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x9b  o + slash,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x9c  Ka (Cyr) lowercase,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0xB8, 0xB8, 0xF0, 0xC0, // 0x9d  O + slash,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, // 0x9e  Be (Cyr) uppercase,
    0x80, 0xE0, 0x70, 0x30, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, // 0x9f  Be (Cyr) lowercase,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xa0  a + acute,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xa1  i + acute,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xa2  o + acute,
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xa3  u + acute,
    0x00, 0x10, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x10, 0x00, // 0xa4  n + tilde,
    0xE0, 0xE4, 0x82, 0x02, 0x04, 0x04, 0x08, 0x08, 0xE4, 0xE0, // 0xa5  N + tilde,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, // 0xa6  Ge (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xa7  Ge (Cyr) lowercase,
    0x00, 0x00, 0xC0, 0xF0, 0x38, 0x38, 0xF8, 0xF0, 0x00, 0x00, // 0xa8  De (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xa9  De (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, // 0xaa  Zhe (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xab  Zhe (Cyr) lowercase,
    0x60, 0x70, 0x38, 0x38, 0x18, 0x18, 0x38, 0x38, 0xF0, 0xE0, // 0xac  Ze (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xad  Ze (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF8, 0xF8, // 0xae  I (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xaf  I (Cyr) lowercase,
    0xF8, 0xF8, 0x02, 0x04, 0x08, 0x08, 0x04, 0x82, 0xF8, 0xF8, // 0xb0  Short I (Cyr) uppercase,
    0x00, 0x00, 0x20, 0x40, 0x80, 0x80, 0x40, 0x20, 0x00, 0x00, // 0xb1  Short I (Cyr) lowercase,
    0x00, 0x00, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, // 0xb2  El (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xb3  El (Cyr) lowercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xb4  Em (Cyr) lowercase,
    0x80, 0xC0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xC0, 0x80, // 0xb5  A + acute,
    0x80, 0xC0, 0xE8, 0xE4, 0xE2, 0xE2, 0xE4, 0xE8, 0xC0, 0x80, // 0xb6  A + circumflex,
    0x80, 0xC0, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xC0, 0x80, // 0xb7  A + grave,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, // 0xb8  Pe (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xb9  Pe (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0xba  U (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xbb  U (Cyr) lowercase,
    0x00, 0xC0, 0xE0, 0xE0, 0xF8, 0xF8, 0xE0, 0xE0, 0xC0, 0x00, // 0xbc  Ef (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 0xbd  Ef (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, // 0xbe  Tse (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xbf  Tse (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0xc0  Che (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xc1  Che (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, // 0xc2  Sha (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xc3  Sha (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, // 0xc4  Shcha (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xc5  Shcha (Cyr) lowercase,
    0x00, 0x10, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x10, 0x00, // 0xc6  a + tilde,
    0x00, 0xC4, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xC4, 0x00, // 0xc7  A + tilde,
    0x18, 0x18, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xc8  Yer (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xc9  Yer (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0xca  Yery (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xcb  Yery (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xcc  Soft (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xcd  Soft (Cyr) lowercase,
    0xC0, 0xE0, 0x70, 0x38, 0x38, 0x38, 0x38, 0x70, 0xE0, 0xC0, // 0xce  E (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xcf  E (Cyr) lowercase,
    0xF8, 0xF8, 0x00, 0x00, 0x80, 0xE0, 0x70, 0x70, 0xE0, 0x80, // 0xd0  Yu (Cyr),
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xd1  Yu (Cyr),
    0xE0, 0xE0, 0xE8, 0xE4, 0xE2, 0xE2, 0xE4, 0xE8, 0xE0, 0xE0, // 0xd2  E + circumflex,
    0xE0, 0xE0, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0xE0, 0xE0, // 0xd3  E + umlaut,
    0xE0, 0xE0, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xE0, 0xE0, // 0xd4  E + grave,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xd5  En (Cyr) lowercase,
    0x00, 0x00, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0x00, 0x00, // 0xd6  I + acute,
    0x00, 0x00, 0xE8, 0xE4, 0xE2, 0xE2, 0xE4, 0xE8, 0x00, 0x00, // 0xd7  I + circumflex,
    0x00, 0x00, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0x00, 0x00, // 0xd8  I + umlaut,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, // 0xd9  Ya (Cyr) uppercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xda  Ya (Cyr) lowercase,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, 0x00, // 0xdb  A + Ogonek,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xdc  a + Ogonek,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, // 0xdd  Ve (Cyr) lowercase,
    0x00, 0x00, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0x00, 0x00, // 0xde  I + grave,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, // 0xdf  Te (Cyr) lowercase,
    0x00, 0xC0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xC0, 0x00, // 0xe0  O + acute,
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, 0x00, // 0xe1  beta or scharfes S,
    0x00, 0xC0, 0xE8, 0xE4, 0xE2, 0xE2, 0xE4, 0xE8, 0xC0, 0x00, // 0xe2  O + circumflex,
    0x00, 0xC0, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xC0, 0x00, // 0xe3  O + grave,
    0x00, 0x20, 0x10, 0x10, 0x20, 0x20, 0x40, 0x40, 0x20, 0x00, // 0xe4  o + tilde,
    0x00, 0xC4, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xC4, 0x00, // 0xe5  O + tilde,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xe6  mu,
    0x00, 0xC0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xC0, 0x00, // 0xe7  C + acute,
    0x00, 0x00, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x00, 0x00, // 0xe8  c + acute,
    0xE0, 0xE0, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0xE0, 0xE0, // 0xe9  U + acute,
    0xE0, 0xE0, 0x08, 0x04, 0x02, 0x02, 0x04, 0x08, 0xE0, 0xE0, // 0xea  U + circumflex,
    0xE0, 0xE0, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0xE0, 0xE0, // 0xeb  U + grave,
    0x00, 0x00, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x00, 0x00, // 0xec  y + acute,
    0xE0, 0xE0, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0xE0, 0xE0, // 0xed  Y + acute,
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, // 0xee  E + Ogonek,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xef  e + Ogonek,
    0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x80, 0xC0, 0x00, 0x00, // 0xf0  L + stroke,
    0x00, 0x00, 0x38, 0x38, 0xF8, 0xF8, 0x80, 0xC0, 0x60, 0x00, // 0xf1  l + stroke,
    0xE0, 0xE0, 0x88, 0x08, 0x04, 0x04, 0x02, 0x02, 0xE0, 0xE0, // 0xf2  N + acute,
    0x00, 0x00, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x00, 0x00, // 0xf3  n + acute,
    0x80, 0xC0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xE0, 0x00, // 0xf4  S + acute,
    0x00, 0x00, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x00, 0x00, // 0xf5  s + acute,
    0xE0, 0xE0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xE0, 0xE0, // 0xf6  Z + acute,
    0x00, 0x00, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x00, 0x00, // 0xf7  z + acute,
    0x00, 0x00, 0x00, 0xF0, 0xF8, 0x38, 0x38, 0xF8, 0xF0, 0x00, // 0xf8  degree,
    0x70, 0x70, 0x70, 0x70, 0x76, 0x76, 0x70, 0x70, 0xF0, 0xF0, // 0xf9  Z + single dot above,
    0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, // 0xfa  z + single dot above,
    0xE0, 0xE0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0xE0, // 0xfb  Y + umlaut,
    0x00, 0x00, 0x38, 0x38, 0x38, 0xB8, 0xF0, 0x40, 0x00, 0x00, // 0xfc  superscript 3,
    0x00, 0x00, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, 0x00, 0x00, // 0xfd  superscript 2,
    #ifdef INCLUDE_TURKISH_PATTERNS
    0x00, 0x00, 0x08, 0x10, 0x20, 0x20, 0x10, 0x08, 0x00, 0x00, // 0xA6 TURKISH  g breve
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA7 TURKISH  i dotless
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA8 TURKISH  s cedilla
    0x00, 0x00, 0x70, 0x70, 0xF6, 0xF6, 0x70, 0x70, 0x00, 0x00, // 0xA9 TURKISH  I dotted
    0x00, 0xC0, 0xE2, 0xE4, 0xE8, 0xE8, 0xE4, 0xE2, 0xC0, 0x00, // 0xAA TURKISH  G breve
    0xE0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, // 0xAB TURKISH  S cedilla
    #endif
    #ifdef INCLUDE_KATAKANA_PATTERNS
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA1 Katakana                	
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, // 0xA2 Katakana
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA3 Katakana
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA4 Katakana
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA5 Katakana dot
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xA6 Katakana wo
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA7 Katakana hu (small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA8 Katakana I(small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA9 Katakana u(small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAA Katakana e(small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAB Katakana o(small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAC Katakana ya(small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAD Katakana yu(small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAE Katakana yo(small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAF Katakana tu(small)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB0 Katakana -
    0x18, 0x18, 0x18, 0x98, 0x98, 0x18, 0x18, 0x18, 0xF8, 0xF8, // 0xB1 Katakana a
    0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0x18, // 0xB2 Katakana I
    0xC0, 0xC0, 0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0xC0, // 0xB3 Katakana u
    0x00, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x00, // 0xB4 Katakana e
    0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xFC, 0xFC, 0x60, 0x60, // 0xB5 Katakana o
    0x60, 0x60, 0xFC, 0xFC, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, // 0xB6 Katakana ka
    0x60, 0x60, 0x60, 0x60, 0xFC, 0xFC, 0x60, 0x60, 0x60, 0x60, // 0xB7 Katakana ki
    0x00, 0x00, 0xFC, 0xFC, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, // 0xB8 Katakana ku
    0x00, 0x00, 0xFC, 0xFC, 0x60, 0x60, 0xE0, 0xE0, 0x60, 0x60, // 0xB9 Katakana ke
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xBA Katakana ko
    0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, // 0xBB Katakana sa
    0x00, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, // 0xBC Katakana shi
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xBD Katakana su
    0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xBE Katakana se
    0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, // 0xBF Katakana so
    0x00, 0x00, 0xF0, 0xF0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xC0 Katakana ta
    0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x60, 0x60, 0x00, // 0xC1 Katakana chi
    0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, // 0xC2 Katakana tu
    0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, // 0xC3 Katakana te
    0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xC4 Katakana to
    0x80, 0x80, 0x80, 0x80, 0xF8, 0xF8, 0x80, 0x80, 0x80, 0x80, // 0xC5 Katakana na
    0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, // 0xC6 Katakana ni
    0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, // 0xC7 Katakana nu
    0xC0, 0xC0, 0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0xC0, // 0xC8 Katakana ne
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, // 0xC9 Katakana no
    0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, // 0xCA Katakana ha
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xCB Katakana hi
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xCC Katakana hu
    0x00, 0x80, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xCD Katakana he
    0xC0, 0xC0, 0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0xC0, // 0xCE Katakana ho
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xCF Katakana ma
    0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x00, 0x00, // 0xD0 Katakana mi
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, // 0xD1 Katakana mu
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, // 0xD2 Katakana me
    0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, // 0xD3 Katakana mo
    0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xD4 Katakana ya
    0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, // 0xD5 Katakana yu
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xD6 Katakana yo
    0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, // 0xD7 Katakana ra
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, // 0xD8 Katakana ri
    0x00, 0x80, 0x80, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0x00, // 0xD9 Katakana ru
    0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xDA Katakana re
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xDB Katakana ro
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, // 0xDC Katakana wa
    0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xDD Katakana n
    0x78, 0xF8, 0xC0, 0x00, 0x78, 0xF8, 0xC0, 0x00, 0x00, 0x00, // 0xDE Katakana
    0xF0, 0xF8, 0x98, 0x98, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, // 0xDF Katakana
    #endif
    #ifdef INCLUDE_RUSSIAN_PATTERNS
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x8A Cyrillic Uppercase A 	
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x8B Cyrillic Uppercase Ve	
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, // 0x8C Cyrillic Uppercase Io	
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x80, 0xC0, 0x60, 0x38, 0x18, // 0x8D Cyrillic Uppercase Ka	
    0xF8, 0xF8, 0x70, 0xC0, 0x00, 0x00, 0xC0, 0x70, 0xF8, 0xF8, // 0x8E Cyrillic Uppercase Em	
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x8F Cyrillic Uppercase En	
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x90 Cyrillic Uppercase O 	
    0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x91 Cyrillic Uppercase Er	
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0x92 Cyrillic Uppercase Es	
    0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, // 0x93 Cyrillic Uppercase Te	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x94 Cyrillic Lowercase A 	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x95 Cyrillic Lowercase Ie	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x96 Cyrillic Lowercase O 	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x97 Cyrillic Lowercase Er	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x98 Cyrillic Lowercase Es	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x99 Cyrillic Lowercase Ha	
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, // 0x9A Cyrillic Uppercase Ha	
    #endif
    #ifdef INCLUDE_LATIN1_PATTERNS
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA0 non breaking space
    0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, // 0xA1 inverted exclamation    	
    0x00, 0xC0, 0xE0, 0xE0, 0xF8, 0xF8, 0xE0, 0xE0, 0x00, 0x00, // 0xA2 cent (currency)         	
    0x00, 0x00, 0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0xA3 pound Sign              	
    0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, // 0xA4 currency symbol         	
    0x78, 0xF8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF8, 0x78, // 0xA5 yen symbol              	
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 0xA6 vertical bar            	
    0xE0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, // 0xA7 section sign            	
    0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, // 0xA8 umlaut                  	
    0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, // 0xA9 copyright symbol        	
    0x80, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xF8, 0xF0, 0x00, // 0xAA superscript a           	
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, // 0xAB guillemets <<           	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAC negation symbol         	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAD soft hyphen             	
    0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, // 0xAE reg'd trademark symbol  	
    0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // 0xAF Macron                  	
    0x00, 0x00, 0x00, 0xF0, 0xF8, 0x38, 0x38, 0xF8, 0xF0, 0x00, // 0xB0 degree symbol           	
    0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, // 0xB1 plus/minus sign         	
    0x00, 0x08, 0x0C, 0x8C, 0xCC, 0x78, 0x30, 0x00, 0x00, 0x00, // 0xB2 superscript 2           	
    0x00, 0x08, 0xCC, 0xCC, 0xCC, 0xF8, 0x30, 0x00, 0x00, 0x00, // 0xB3 superscript 3           	
    0x00, 0x00, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0x00, 0x00, // 0xB4 acute                   	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB5 mu                      	
    0x80, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0x18, 0x18, 0xF8, 0xF8, // 0xB6 pilcrow                 	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB7 interpunct              	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB8 cedilla                 	
    0x00, 0x10, 0x18, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB9 superscript 1           	
    0xF0, 0xF8, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0xF8, 0xF0, // 0xBA superscript o           	
    0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, // 0xBB guillemets >>           	
    0x00, 0x00, 0x00, 0x10, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xBC quarter                 	
    0x00, 0x00, 0x00, 0x10, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xBD half                    	
    0x00, 0x00, 0x10, 0x08, 0x08, 0x48, 0xB0, 0x00, 0x00, 0x00, // 0xBE three quarters          	
    0x00, 0x00, 0x00, 0x00, 0xB8, 0xB8, 0x00, 0x00, 0x00, 0x00, // 0xBF inverted question mark  	
    0x80, 0xC0, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xC0, 0x80, // 0xC0 A grave                 	
    0x80, 0xC0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xC0, 0x80, // 0xC1 A acute                 	
    0x80, 0xC0, 0xE8, 0xE4, 0xE2, 0xE2, 0xE4, 0xE8, 0xC0, 0x80, // 0xC2 A circumflex            	
    0x00, 0xC4, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xC4, 0x00, // 0xC3 A tilde                 	
    0x00, 0xC0, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0xC0, 0x00, // 0xC4 A umlaut                	
    0x00, 0xC0, 0xE0, 0xE4, 0xEA, 0xEA, 0xE4, 0xE0, 0xC0, 0x00, // 0xC5 A ring                  	
    0xC0, 0xF0, 0x38, 0x38, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, // 0xC6 AE merged               	
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, // 0xC7 C cedilla               	
    0xE0, 0xE0, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xE0, 0xE0, // 0xC8 E grave                 	
    0xE0, 0xE0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xE0, 0xE0, // 0xC9 E acute                 	
    0xE0, 0xE0, 0xE8, 0xE4, 0xE2, 0xE2, 0xE4, 0xE8, 0xE0, 0xE0, // 0xCA E cedilla               	
    0xE0, 0xE0, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0xE0, 0xE0, // 0xCB E umlaut                	
    0x00, 0x00, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0x00, 0x00, // 0xCC I grave                 	
    0x00, 0x00, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0x00, 0x00, // 0xCD I acute                 	
    0x00, 0x00, 0xE8, 0xE4, 0xE2, 0xE2, 0xE4, 0xE8, 0x00, 0x00, // 0xCE I circumflex            	
    0x00, 0x00, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0x00, 0x00, // 0xCF I umlaut                	
    0x00, 0x00, 0xF8, 0xF8, 0x38, 0x38, 0x70, 0xC0, 0x80, 0x00, // 0xD0 uppercase Eth           	
    0xE0, 0xE4, 0x82, 0x02, 0x04, 0x04, 0x08, 0x08, 0xE4, 0xE0, // 0xD1 N tilde                 	
    0x00, 0xC0, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xC0, 0x00, // 0xD2 O grave                 	
    0x00, 0xC0, 0xE8, 0xE8, 0xE4, 0xE4, 0xE2, 0xE2, 0xC0, 0x00, // 0xD3 O acute                 	
    0x00, 0xC0, 0xE8, 0xE4, 0xE2, 0xE2, 0xE4, 0xE8, 0xC0, 0x00, // 0xD4 O circumflex            	
    0x00, 0xC4, 0xE2, 0xE2, 0xE4, 0xE4, 0xE8, 0xE8, 0xC4, 0x00, // 0xD5 O tilde                 	
    0x00, 0xC0, 0xEE, 0xE0, 0xE0, 0xE0, 0xE0, 0xEE, 0xC0, 0x00, // 0xD6 O umlaut                	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xD7 multiplication symbol   	
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0xB8, 0xF0, 0xF8, 0xD8, // 0xD8 O slash                 	
    0xE0, 0xE0, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0xE0, 0xE0, // 0xD9 U grave                 	
    0xE0, 0xE0, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0xE0, 0xE0, // 0xDA U acute                 	
    0xE0, 0xE0, 0x08, 0x04, 0x02, 0x02, 0x04, 0x08, 0xE0, 0xE0, // 0xDB U circumflex            	
    0xE0, 0xE0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0xE0, // 0xDC U umlaut                	
    0xE0, 0xE0, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0xE0, 0xE0, // 0xDD Y acute                 	
    0xF8, 0xF8, 0x98, 0x98, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, // 0xDE thorn                   	
    0xC0, 0xF0, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xC0, 0x00, // 0xDF scharfes s              	
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0xE0 a grave                 	
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xE1 a acute                 	
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0xE2 a circumflex            	
    0x00, 0x10, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x10, 0x00, // 0xE3 a tilde                 	
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0xE4 a umlaut                	
    0x00, 0x00, 0x00, 0x30, 0x48, 0x48, 0x30, 0x00, 0x00, 0x00, // 0xE5 a ring                  	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xE6 ae merged               	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xE7 c cedilla               	
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0xE8 e grave                 	
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xE9 e acute                 	
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0xEA e circumflex            	
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0xEB e umlaut                	
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0xEC i grave                 	
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xED i acute                 	
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0xEE i circumflex            	
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, // 0xEF i umlaut                	
    0x00, 0x00, 0x00, 0x88, 0xD8, 0xF0, 0x60, 0xF0, 0xB8, 0x18, // 0xF0 lowercase Eth           	
    0x00, 0x10, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x10, 0x00, // 0xF1 n tilde                 	
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0xF2 o grave                 	
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xF3 o acute                 	
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0xF4 o curcumflex            	
    0x00, 0x20, 0x10, 0x10, 0x20, 0x20, 0x40, 0x40, 0x20, 0x00, // 0xF5 o tilde                 	
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0xF6 o umlaut                	
    0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, // 0xF7 division symbol         	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xF8 o slash                 	
    0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00, 0x00, // 0xF9 u grave                 	
    0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00, // 0xFA u acute                 	
    0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, // 0xFB u circumflex            	
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0xFC u umlaut                	
    0x00, 0x00, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x00, 0x00, // 0xFD y acute                 	
    0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xFE thorn                   	
    0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // 0xFF y umlaut                	
    #endif
    };

    const TUSIGN8 FontMid[] =
    {
    // Centre page Bit Patterns for Characters 0x01 to 0xFD
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x01  o + acute,
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x02  i + acute,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x03  u + acute,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x04  a + acute,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x05  a + ring,
    0x07, 0x07, 0x01, 0x00, 0xFF, 0xFF, 0x00, 0x01, 0x07, 0x07, // 0x06  up arrow,
    0xE0, 0xE0, 0xC0, 0x00, 0xFF, 0xFF, 0x00, 0xC0, 0xE0, 0xE0, // 0x07  down arrow,
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, // 0x08  three bars,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x09  three dots,
    0xFF, 0xFF, 0xE0, 0xE0, 0xFF, 0xFF, 0x18, 0x18, 0x00, 0x00, // 0x0a  AE merged,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x07, 0x07, 0x07, 0x01, // 0x0b  degree,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0x0c  A + umlaut,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x0d  O + umlaut,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x0e  U + umlaut,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x0f  a + umlaut,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x10  o + umlaut,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x11  u + umlaut,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x12  e + acute,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x13  e + grave,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x14  e + circumflex,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x80, // 0x15  c + cedilla,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x16  omega,
    0x00, 0x00, 0x00, 0xC1, 0xE7, 0xFF, 0x3E, 0x18, 0x00, 0x00, // 0x17  epsilon,
    0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x18  micro,
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xFE, 0xE7, 0xE7, 0xE1, 0xE0, // 0x19  superscript 2,
    0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE7, 0xEF, 0x38, 0x10, // 0x1a  superscript 3,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 0x1b  ae merged,
    0xFF, 0xFF, 0x0C, 0x0C, 0x0C, 0x0C, 0x1B, 0x31, 0xE0, 0xC0, // 0x1c  beta,
    0x00, 0x00, 0x00, 0xC0, 0xE0, 0x30, 0x18, 0x0E, 0xFF, 0xFF, // 0x1d  N + tilde,
    0xE0, 0xF0, 0xF8, 0xEE, 0xE7, 0xE1, 0xE0, 0xE0, 0xE0, 0xE0, // 0x1e  n + tilde,
    0xE0, 0xE0, 0xE0, 0xE0, 0xE1, 0xE7, 0xEE, 0xF8, 0xF0, 0xE0, // 0x1f  o + slash,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x20  space,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x21  !,
    0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, // 0x22  double quotes,
    0xE7, 0xE7, 0xFF, 0xFF, 0xE7, 0xE7, 0xFF, 0xFF, 0xE7, 0xE7, // 0x23  #,
    0x07, 0x0F, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0xF0, 0xE0, // 0x24  $,
    0x80, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x01, // 0x25  %,
    0xC1, 0xE7, 0x18, 0x18, 0x36, 0xE7, 0xC1, 0x00, 0xE0, 0xE0, // 0x26  &,
    0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, // 0x27  ',
    0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x28  (,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0x29  ),
    0xE7, 0xE7, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0xE7, 0xE7, // 0x2a  *,
    0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, // 0x2b  +,
    0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, // 0x2c  comma,
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, // 0x2d  -,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, // 0x2e  .,
    0x80, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x01, // 0x2f  forward slash,
    0xFF, 0xFF, 0xE0, 0xE0, 0x18, 0x18, 0x07, 0x07, 0xFF, 0xFF, // 0x30  0,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x31  1,
    0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0x38, 0x1E, 0x0F, 0x07, // 0x32  2,
    0x00, 0x00, 0x18, 0x1C, 0x1E, 0x1B, 0x19, 0x18, 0xF0, 0xE0, // 0x33  3,
    0xFE, 0xFF, 0xE7, 0xE3, 0xE1, 0xE0, 0xFF, 0xFF, 0xE0, 0xE0, // 0x34  4,
    0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x35  5,
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF0, 0xE0, // 0x36  6,
    0x00, 0x00, 0xE0, 0xF0, 0x18, 0x0E, 0x07, 0x01, 0x00, 0x00, // 0x37  7,
    0xE3, 0xF7, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF7, 0xE3, // 0x38  8,
    0x07, 0x0F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, // 0x39  9,
    0x00, 0x00, 0x00, 0x00, 0xE7, 0xE7, 0xE7, 0xE7, 0x00, 0x00, // 0x3a  :,
    0x00, 0x00, 0x00, 0x00, 0xE7, 0xE7, 0xE7, 0xE7, 0x00, 0x00, // 0x3b  ;,
    0x00, 0x00, 0x18, 0x18, 0xE7, 0xE7, 0x00, 0x00, 0x00, 0x00, // 0x3c  <,
    0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, // 0x3d  =,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0xE7, 0x18, 0x18, // 0x3e  >,
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0x30, 0x18, 0x0F, 0x07, // 0x3f  ?,
    0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xE7, 0xE7, 0x1F, 0x1F, // 0x40  @,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0x41  A,
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF7, 0xE3, // 0x42  B,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x43  C,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x44  D,
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, // 0x45  E,
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, // 0x46  F,
    0xFF, 0xFF, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF8, // 0x47  G,
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, // 0x48  H,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x49  I,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0x4a  J,
    0xFF, 0xFF, 0x18, 0x3E, 0xE7, 0xC1, 0x00, 0x00, 0x00, 0x00, // 0x4b  K,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x4c  L,
    0xFF, 0xFF, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0xFF, 0xFF, // 0x4d  M,
    0xFF, 0xFF, 0x01, 0x07, 0x0E, 0x18, 0x30, 0xE0, 0xFF, 0xFF, // 0x4e  N,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x4f  O,
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x0F, 0x07, // 0x50  P,
    0xFF, 0xFF, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0xFF, 0xFF, // 0x51  Q,
    0xFF, 0xFF, 0x18, 0x38, 0xF8, 0xD8, 0x18, 0x18, 0x0F, 0x07, // 0x52  R,
    0x07, 0x0F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF0, 0xE0, // 0x53  S,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x54  T,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x55  U,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x56  V,
    0xFF, 0xFF, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0xFF, 0xFF, // 0x57  W,
    0x00, 0x81, 0xC3, 0x66, 0x3C, 0x3C, 0x66, 0xC3, 0x81, 0x00, // 0x58  X,
    0x07, 0x0F, 0x18, 0x30, 0xE0, 0xE0, 0x30, 0x18, 0x0F, 0x07, // 0x59  Y,
    0x00, 0xC0, 0xE0, 0x30, 0x18, 0x0E, 0x07, 0x01, 0x00, 0x00, // 0x5a  Z,
    0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x5b  [,
    0x01, 0x03, 0x07, 0x0E, 0x1C, 0x38, 0x70, 0xE0, 0xC0, 0x80, // 0x5c  back slash,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0x5d  ],
    0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, // 0x5e  ^,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x5f  _,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x07, 0x00, 0x00, // 0x60  `,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x61  a,
    0xFF, 0xFF, 0x38, 0x0E, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x62  b,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, // 0x63  c,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x0E, 0x18, 0xFF, 0xFF, // 0x64  d,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x65  e,
    0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, // 0x66  f,
    0xF8, 0xFE, 0x07, 0x03, 0x03, 0x03, 0x06, 0xFF, 0xFF, 0x00, // 0x67  g,
    0xFF, 0xFF, 0x18, 0x0E, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x68  h,
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x69  i,
    0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, // 0x6a  j,
    0xFF, 0xFF, 0xE0, 0xF0, 0x18, 0x0C, 0x07, 0x03, 0x00, 0x00, // 0x6b  k,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x6c  l,
    0xF8, 0xFE, 0x07, 0x07, 0x78, 0x78, 0x07, 0x07, 0xFE, 0xF8, // 0x6d  m,
    0xFF, 0xFF, 0x18, 0x0E, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x6e  n,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x6f  o,
    0xFF, 0xFF, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0x7E, 0x18, // 0x70  p,
    0x00, 0x00, 0xFC, 0xFE, 0x87, 0x03, 0x03, 0x86, 0xFF, 0xFF, // 0x71  q,
    0xFF, 0xFF, 0x18, 0x0E, 0x07, 0x07, 0x07, 0x07, 0x1E, 0x18, // 0x72  r,
    0x38, 0x7E, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xC0, 0x00, // 0x73  s,
    0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x74  t,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x75  u,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x76  v,
    0xFF, 0xFF, 0x00, 0x00, 0xE0, 0xE0, 0x00, 0x00, 0xFF, 0xFF, // 0x77  w,
    0x03, 0x07, 0x0C, 0xB8, 0xF0, 0xE0, 0xB8, 0x0C, 0x07, 0x03, // 0x78  x,
    0x1F, 0x3F, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xFF, 0xFF, // 0x79  y,
    0x07, 0x07, 0x07, 0xC7, 0xE7, 0x37, 0x1F, 0x0F, 0x07, 0x07, // 0x7a  z,
    0x18, 0x3E, 0xE7, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x7b  {,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x7c  |,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0xE7, 0x3E, 0x18, // 0x7d  },
    0xE0, 0xE0, 0x18, 0x18, 0xF8, 0xF8, 0xE0, 0xE0, 0x18, 0x18, // 0x7e  ~,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x7f  not recognised,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, // 0x80  C + cedilla,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x81  u + umlaut,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x82  e + acute,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x83  a + circumflex,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x84  a + umlaut,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x85  a + grave,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x86  a + ring,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x80, // 0x87  c + cedilla,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x88  e + circumflex,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x89  e + umlaut,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x8a  e + grave,
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x8b  i + umlaut,
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x8c  i + circumflex,
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x8d  i + grave,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0x8e  A + umlaut,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0x8f  A + ring,
    0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, // 0x90  E + acute,
    0x00, 0xC6, 0xE7, 0x67, 0xFE, 0xFE, 0xE7, 0xE7, 0xFE, 0xF8, // 0x91  ae merged,
    0xFF, 0xFF, 0xE0, 0xE0, 0xFF, 0xFF, 0x18, 0x18, 0x00, 0x00, // 0x92  AE merged,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x93  o + circumflex,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x94  o + umlaut,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x95  o + grave,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x96  u + circumflex,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x97  u + grave,
    0x1F, 0x3F, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xFF, 0xFF, // 0x98  y + umlaut,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x99  O + umlaut,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x9a  U + umlaut,
    0xF8, 0xFE, 0x07, 0x87, 0xC7, 0x77, 0x3F, 0x1F, 0xFE, 0xF8, // 0x9b  o + slash,
    0xFF, 0xFF, 0x60, 0xE0, 0xF0, 0xB8, 0x1E, 0x07, 0x03, 0x03, // 0x9c  Ka (Cyr) lowercase,
    0xFF, 0xFF, 0x80, 0xE0, 0x78, 0x1E, 0x07, 0x01, 0xFF, 0xFF, // 0x9d  O + slash,
    0xFF, 0xFF, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF8, 0xE0, // 0x9e  Be (Cyr) uppercase,
    0xFF, 0xFF, 0x1C, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xFC, 0xF0, // 0x9f  Be (Cyr) lowercase,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0xa0  a + acute,
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xa1  i + acute,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xa2  o + acute,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xa3  u + acute,
    0xFF, 0xFF, 0x18, 0x0E, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xa4  n + tilde,
    0xFF, 0xFF, 0x01, 0x07, 0x0E, 0x18, 0x30, 0xE0, 0xFF, 0xFF, // 0xa5  N + tilde,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xa6  Ge (Cyr) uppercase,
    0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, // 0xa7  Ge (Cyr) lowercase,
    0xE0, 0xF8, 0x1F, 0x0F, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0xa8  De (Cyr) uppercase,
    0x80, 0xE0, 0x78, 0x3E, 0x07, 0x07, 0xFF, 0xFE, 0x00, 0x00, // 0xa9  De (Cyr) lowercase,
    0xE3, 0xF7, 0x1C, 0x1C, 0xFF, 0xFF, 0x1C, 0x1C, 0xF7, 0xE3, // 0xaa  Zhe (Cyr) uppercase,
    0x1F, 0xBF, 0xE0, 0xE0, 0xFF, 0xFF, 0xE0, 0xE0, 0xBF, 0x1F, // 0xab  Zhe (Cyr) lowercase,
    0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x3E, 0xF7, 0xE3, // 0xac  Ze (Cyr) uppercase,
    0x0C, 0x0E, 0x07, 0x07, 0x03, 0xE3, 0xE7, 0xE7, 0xBE, 0x1C, // 0xad  Ze (Cyr) lowercase,
    0xFF, 0xFF, 0xC0, 0x70, 0x38, 0x0C, 0x06, 0x03, 0xFF, 0xFF, // 0xae  I (Cyr) uppercase,
    0xFF, 0xFF, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x1C, 0xFF, 0xFF, // 0xaf  I (Cyr) lowercase,
    0xFF, 0xFF, 0xC0, 0x70, 0x38, 0x0C, 0x06, 0x03, 0xFF, 0xFF, // 0xb0  Short I (Cyr) uppercase
    0xFF, 0xFF, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x1C, 0xFF, 0xFF, // 0xb1  Short I (Cyr) lowercase
    0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xb2  El (Cyr) uppercase,
    0x00, 0x00, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0xFF, 0xFF, // 0xb3  El (Cyr) lowercase,
    0xFF, 0xFF, 0x0E, 0x18, 0xE0, 0xE0, 0x18, 0x0E, 0xFF, 0xFF, // 0xb4  Em (Cyr) lowercase,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xb5  A + acute,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xb6  A + circumflex,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xb7  A + grave,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xb8  Pe (Cyr) uppercase,
    0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFF, 0xFF, // 0xb9  Pe (Cyr) lowercase,
    0x07, 0x0F, 0x1C, 0xB0, 0xE0, 0xE0, 0x70, 0x1C, 0x0F, 0x07, // 0xba  U (Cyr) uppercase,
    0x1F, 0x3F, 0x70, 0xC0, 0x80, 0x80, 0xC0, 0x70, 0x3F, 0x1F, // 0xbb  U (Cyr) lowercase,
    0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, // 0xbc  Ef (Cyr) uppercase,
    0xF8, 0xFE, 0x0E, 0x1C, 0xFF, 0xFF, 0x1C, 0x0E, 0xFE, 0xF8, // 0xbd  Ef (Cyr) lowercase,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0xbe  Tse (Cyr) uppercase,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0xbf  Tse (Cyr) lowercase,
    0x07, 0x0F, 0x3C, 0x38, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF, // 0xc0  Che (Cyr) uppercase,
    0x3F, 0x7F, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, // 0xc1  Che (Cyr) lowercase,
    0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, // 0xc2  Sha (Cyr) uppercase,
    0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, // 0xc3  Sha (Cyr) lowercase,
    0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, // 0xc4  Shcha (Cyr) uppercase,
    0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, // 0xc5  Shcha (Cyr) lowercase,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0xc6  a + tilde,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xc7  A + tilde,
    0x00, 0x00, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xc8  Yer (Cyr) uppercase,
    0x03, 0x03, 0xFF, 0xFF, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xE0, // 0xc9  Yer (Cyr) lowercase,
    0xFF, 0xFF, 0x07, 0x07, 0x07, 0xFE, 0xF8, 0x00, 0xFF, 0xFF, // 0xca  Yery (Cyr) uppercase,
    0xFF, 0xFF, 0x38, 0x38, 0x38, 0xF0, 0xE0, 0x00, 0xFF, 0xFF, // 0xcb  Yery (Cyr) lowercase,
    0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xcc  Soft (Cyr) uppercase,
    0xFF, 0xFF, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xE0, // 0xcd  Soft (Cyr) lowercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0xFF, 0xFF, // 0xce  E (Cyr) uppercase,
    0x18, 0x1C, 0x0E, 0x07, 0x07, 0x67, 0x67, 0x6E, 0xFC, 0xF8, // 0xcf  E (Cyr) lowercase,
    0xFF, 0xFF, 0x18, 0x18, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, // 0xd0  Yu (Cyr),
    0xFF, 0x60, 0x60, 0xF8, 0xFE, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xd1  Yu (Cyr),
    0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, // 0xd2  E + circumflex,
    0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, // 0xd3  E + umlaut,
    0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, // 0xd4  E + grave,
    0xFF, 0xFF, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0xFF, 0xFF, // 0xd5  En (Cyr) lowercase,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xd6  I + acute,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xd7  I + circumflex,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xd8  I + umlaut,
    0x07, 0x0F, 0x18, 0x18, 0xD8, 0xF8, 0x38, 0x18, 0xFF, 0xFF, // 0xd9  Ya (Cyr) uppercase,
    0x38, 0x7E, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0xFF, // 0xda  Ya (Cyr) lowercase,
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0x00, // 0xdb  A + Ogonek,
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, 0x00, // 0xdc  a + Ogonek,
    0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0xDF, 0x8C, // 0xdd  Ve (Cyr) lowercase,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xde  I + grave,
    0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, // 0xdf  Te (Cyr) lowercase,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xe0  O + acute,
    0xFF, 0xFF, 0x0C, 0x0C, 0x0C, 0x0C, 0x1B, 0x31, 0xE0, 0xC0, // 0xe1  beta or scharfes S,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xe2  O + circumflex,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xe3  O + grave,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xe4  o + tilde,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xe5  O + tilde,
    0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xe6  mu,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, // 0xe7  C + acute,
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, // 0xe8  c + acute,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xe9  U + acute,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xea  U + circumflex,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xeb  U + grave,
    0x1F, 0x3F, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xFF, 0xFF, // 0xec  y + acute,
    0x07, 0x0F, 0x18, 0x30, 0xE0, 0xE0, 0x30, 0x18, 0x0F, 0x07, // 0xed  Y + acute,
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, // 0xee  E + Ogonek,
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0xef  e + Ogonek,
    0x60, 0x30, 0xFF, 0xFF, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00, // 0xf0  L + stroke,
    0x00, 0x30, 0x18, 0x0C, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, // 0xf1  l + stroke,
    0xFF, 0xFF, 0x01, 0x07, 0x0E, 0x18, 0x30, 0xE0, 0xFF, 0xFF, // 0xf2  N + acute,
    0xFF, 0xFF, 0x18, 0x0E, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xf3  n + acute,
    0x0F, 0x1F, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xE0, 0xC0, // 0xf4  S + acute,
    0x38, 0x7E, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xC0, 0x00, // 0xf5  s + acute,
    0x00, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, // 0xf6  Z + acute,
    0x07, 0x07, 0x07, 0xC7, 0xE7, 0x37, 0x1F, 0x0F, 0x07, 0x07, // 0xf7  z + acute,
    0x00, 0x00, 0x00, 0x01, 0x07, 0x07, 0x07, 0x07, 0x01, 0x00, // 0xf8  degree,
    0x00, 0xC0, 0xE0, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00, // 0xf9  Z + single dot above,
    0x07, 0x07, 0x07, 0xC7, 0xE7, 0x37, 0x1F, 0x0F, 0x07, 0x07, // 0xfa  z + single dot above,
    0x07, 0x0F, 0x18, 0x30, 0xE0, 0xE0, 0x30, 0x18, 0x0F, 0x07, // 0xfb  Y + umlaut,
    0x00, 0x00, 0xE0, 0xE0, 0xE7, 0xEF, 0x38, 0x10, 0x00, 0x00, // 0xfc  superscript 3,
    0x00, 0x00, 0xF8, 0xFE, 0xE7, 0xE7, 0xE1, 0xE0, 0x00, 0x00, // 0xfd  superscript 2,
    #ifdef INCLUDE_TURKISH_PATTERNS
    0xF8, 0xFE, 0x07, 0x03, 0x03, 0x03, 0x06, 0xFF, 0xFF, 0x00, // 0xA6 TURKISH  g breve
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xA7 TURKISH  i dotless
    0x18, 0x3E, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0xE0, 0x80, // 0xA8 TURKISH  s cedilla
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xA9 TURKISH  I dotted
    0xFF, 0xFF, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0xF3, 0xF3, // 0xAA TURKISH  G breve
    0x03, 0x07, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0xF8, 0xF0, // 0xAB TURKISH  S cedilla
    #endif
    #ifdef INCLUDE_KATAKANA_PATTERNS
    0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA1 Katakana                	
    0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, // 0xA2 Katakana                	
    0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, // 0xA3 Katakana                	
    0x70, 0xF0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA4 Katakana                	
    0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 0xA5 Katakana dot            	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xF8, 0x3F, 0x07, // 0xA6 Katakana wo             	
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xE3, 0xFF, 0x3F, // 0xA7 Katakana hu (small)     	
    0x80, 0xC0, 0xE0, 0x70, 0xF8, 0xFC, 0x0E, 0x07, 0x03, 0x00, // 0xA8 Katakana I(small)       	
    0x78, 0x78, 0x18, 0x18, 0x1F, 0x1F, 0x18, 0x18, 0xF8, 0xF8, // 0xA9 Katakana u(small)       	
    0x00, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x00, // 0xAA Katakana e(small)       	
    0x18, 0x18, 0x18, 0x98, 0xD8, 0xF8, 0xFF, 0xFF, 0x18, 0x18, // 0xAB Katakana o(small)       	
    0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x98, 0xD8, 0xF8, 0x38, // 0xAC Katakana ya(small)      	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF8, 0x00, 0x00, // 0xAD Katakana yu(small)      	
    0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0xFF, 0xFF, 0x00, 0x00, // 0xAE Katakana yo(small)      	
    0x18, 0x78, 0xE0, 0x0C, 0x3C, 0x70, 0x00, 0x00, 0xF8, 0xF8, // 0xAF Katakana tu(small)      	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, // 0xB0 Katakana -              	
    0x00, 0x00, 0x00, 0xFF, 0xFF, 0x30, 0x18, 0x1C, 0x0F, 0x03, // 0xB1 Katakana a              	
    0x18, 0x1C, 0x0E, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xB2 Katakana I              	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xB3 Katakana u              	
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xB4 Katakana e              	
    0x80, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xFF, 0xFF, 0x00, 0x00, // 0xB5 Katakana o              	
    0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xB6 Katakana ka             	
    0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, // 0xB7 Katakana ki             	
    0x18, 0x1C, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xB8 Katakana ku             	
    0x18, 0x1C, 0x0F, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0xB9 Katakana ke             	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xBA Katakana ko             	
    0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0xBB Katakana sa             	
    0x0C, 0x0C, 0x1C, 0x19, 0x19, 0x01, 0x00, 0x80, 0xFF, 0x7F, // 0xBC Katakana shi            	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0x3F, 0x0F, // 0xBD Katakana su             	
    0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x0C, 0x0E, 0x07, 0x01, // 0xBE Katakana se             	
    0x01, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x7F, // 0xBF Katakana so             	
    0x60, 0x70, 0x3F, 0x0F, 0x1C, 0x38, 0x70, 0xE0, 0xFF, 0x7F, // 0xC0 Katakana ta             	
    0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, // 0xC1 Katakana chi            	
    0x07, 0x1F, 0x1C, 0x01, 0x07, 0x07, 0x00, 0x80, 0xFF, 0x7F, // 0xC2 Katakana tu             	
    0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, // 0xC3 Katakana te             	
    0x00, 0x00, 0xFF, 0xFF, 0x18, 0x38, 0x30, 0x60, 0x60, 0x00, // 0xC4 Katakana to             	
    0x01, 0x01, 0x01, 0x81, 0xFF, 0x7F, 0x01, 0x01, 0x01, 0x01, // 0xC5 Katakana na             	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xC6 Katakana ni             	
    0x00, 0x00, 0x00, 0x30, 0x70, 0xE0, 0xC0, 0xE0, 0x7F, 0x1F, // 0xC7 Katakana nu             	
    0x80, 0x80, 0xC0, 0x60, 0xF0, 0xF8, 0x5C, 0xEF, 0xC3, 0x81, // 0xC8 Katakana ne             	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x7F, // 0xC9 Katakana no             	
    0x00, 0x80, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF8, // 0xCA Katakana ha             	
    0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, // 0xCB Katakana hi             	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x7F, // 0xCC Katakana hu             	
    0x0E, 0x07, 0x01, 0x00, 0x01, 0x07, 0x1E, 0x78, 0xE0, 0x80, // 0xCD Katakana he             	
    0x80, 0xF0, 0x70, 0x00, 0xFF, 0xFF, 0x00, 0x70, 0xF0, 0x80, // 0xCE Katakana ho             	
    0x00, 0xC0, 0xC0, 0x80, 0x00, 0x80, 0xE0, 0x78, 0x1F, 0x07, // 0xCF Katakana ma             	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x31, 0x31, 0x31, 0x00, 0x00, // 0xD0 Katakana mi             	
    0x80, 0xE0, 0x78, 0x1E, 0x07, 0x61, 0xE0, 0xC0, 0x00, 0x00, // 0xD1 Katakana mu             	
    0x00, 0x00, 0x30, 0x70, 0xE0, 0xC0, 0xE0, 0x78, 0x3F, 0x07, // 0xD2 Katakana me             	
    0x18, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, // 0xD3 Katakana mo             	
    0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x0C, 0x0E, 0x07, 0x01, // 0xD4 Katakana ya             	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, // 0xD5 Katakana yu             	
    0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xFF, 0xFF, // 0xD6 Katakana yo             	
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xE3, 0xFF, 0x3F, // 0xD7 Katakana ra             	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, // 0xD8 Katakana ri             	
    0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x80, // 0xD9 Katakana ru             	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x30, // 0xDA Katakana re             	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xDB Katakana ro             	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x7F, // 0xDC Katakana wa             	
    0x01, 0x01, 0x03, 0x03, 0x03, 0x00, 0x00, 0x80, 0xFF, 0x7F, // 0xDD Katakana n              	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xDE Katakana                	
    0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xDF Katakana                	
    #endif
    #ifdef INCLUDE_RUSSIAN_PATTERNS
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0x8A Cyrillic Uppercase A 	
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF7, 0xE3, // 0x8B Cyrillic Uppercase Ve	
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, // 0x8C Cyrillic Uppercase Io	
    0xFF, 0xFF, 0x18, 0x3E, 0xE7, 0xC1, 0x00, 0x00, 0x00, 0x00, // 0x8D Cyrillic Uppercase Ka	
    0xFF, 0xFF, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0xFF, 0xFF, // 0x8E Cyrillic Uppercase Em	
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, // 0x8F Cyrillic Uppercase En	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0x90 Cyrillic Uppercase O 	
    0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x0F, 0x07, // 0x91 Cyrillic Uppercase Er	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x92 Cyrillic Uppercase Es	
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0x93 Cyrillic Uppercase Te	
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0x94 Cyrillic Lowercase A 	
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0x95 Cyrillic Lowercase Ie	
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0x96 Cyrillic Lowercase O 	
    0xFF, 0xFF, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0x7E, 0x18, // 0x97 Cyrillic Lowercase Er	
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, // 0x98 Cyrillic Lowercase Es	
    0x03, 0x07, 0x0C, 0xB8, 0xF0, 0xE0, 0xB8, 0x0C, 0x07, 0x03, // 0x99 Cyrillic Lowercase Ha	
    0x00, 0x81, 0xC3, 0x66, 0x3C, 0x3C, 0x66, 0xC3, 0x81, 0x00, // 0x9A Cyrillic Uppercase Ha	
    #endif
    #ifdef INCLUDE_LATIN1_PATTERNS
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA0 non breaking space
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xA1 inverted exclamation    	
    0x7F, 0xFF, 0x80, 0x80, 0xFF, 0xFF, 0x80, 0x80, 0xC0, 0x60, // 0xA2 cent (currency)         	
    0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, // 0xA3 pound Sign              	
    0x01, 0x39, 0xEE, 0xC6, 0x83, 0x83, 0xC6, 0xEE, 0x39, 0x01, // 0xA4 currency symbol         	
    0x98, 0x98, 0x99, 0x9B, 0xFE, 0xFE, 0x9B, 0x99, 0x98, 0x98, // 0xA5 yen symbol              	
    0x00, 0x00, 0x00, 0x00, 0xE7, 0xE7, 0x00, 0x00, 0x00, 0x00, // 0xA6 vertical bar            	
    0x03, 0x0F, 0x1E, 0x36, 0x36, 0x6C, 0x6C, 0x78, 0xF0, 0xC0, // 0xA7 section sign            	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA8 umlaut                  	
    0x3C, 0x42, 0x81, 0x3C, 0x42, 0x42, 0x24, 0x81, 0x42, 0x3C, // 0xA9 copyright symbol        	
    0x07, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F, 0x00, // 0xAA superscript a           	
    0x18, 0x3C, 0x66, 0xC3, 0x81, 0x18, 0x3C, 0x66, 0xC3, 0x81, // 0xAB guillemets <<           	
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x7F, 0x7F, // 0xAC negation symbol         	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, // 0xAD soft hyphen             	
    0x3C, 0x42, 0x81, 0x7E, 0x12, 0x12, 0x6C, 0x81, 0x42, 0x3C, // 0xAE reg'd trademark symbol  	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAF Macron                  	
    0x00, 0x00, 0x00, 0x01, 0x07, 0x07, 0x07, 0x07, 0x01, 0x00, // 0xB0 degree symbol           	
    0x06, 0x06, 0x06, 0x06, 0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, // 0xB1 plus/minus sign         	
    0x00, 0x0E, 0x0F, 0x0D, 0x0C, 0x0C, 0x0C, 0x00, 0x00, 0x00, // 0xB2 superscript 2           	
    0x00, 0x04, 0x0C, 0x0C, 0x0C, 0x07, 0x03, 0x00, 0x00, 0x00, // 0xB3 superscript 3           	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB4 acute                   	
    0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xB5 mu                      	
    0x03, 0x0F, 0x1F, 0x1F, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, // 0xB6 pilcrow                 	
    0x00, 0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00, 0x00, // 0xB7 interpunct              	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB8 cedilla                 	
    0x00, 0x0C, 0x0C, 0x0F, 0x0F, 0x0C, 0x0C, 0x00, 0x00, 0x00, // 0xB9 superscript 1           	
    0x03, 0x07, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x07, 0x03, // 0xBA superscript o           	
    0x81, 0xC3, 0x66, 0x3C, 0x18, 0x81, 0xC3, 0x66, 0x3C, 0x18, // 0xBB guillemets >>           	
    0x08, 0x08, 0x08, 0x8A, 0x4B, 0xEA, 0x08, 0x08, 0x08, 0x00, // 0xBC quarter                 	
    0x08, 0x08, 0x48, 0x2A, 0x2B, 0x2A, 0xC8, 0x08, 0x08, 0x00, // 0xBD half                    	
    0x08, 0x08, 0x09, 0x8A, 0x4A, 0xEA, 0x09, 0x08, 0x08, 0x00, // 0xBE three quarters          	
    0xE0, 0xF0, 0x18, 0x0C, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, // 0xBF inverted question mark  	
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xC0 A grave                 	
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xC1 A acute                 	
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xC2 A circumflex            	
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xC3 A tilde                 	
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xC4 A umlaut                	
    0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, // 0xC5 A ring                  	
    0xFF, 0xFF, 0xE0, 0xE0, 0xFF, 0xFF, 0x18, 0x18, 0x00, 0x00, // 0xC6 AE merged               	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, // 0xC7 C cedilla               	
    0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, // 0xC8 E grave                 	
    0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, // 0xC9 E acute                 	
    0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, // 0xCA E cedilla               	
    0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, // 0xCB E umlaut                	
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xCC I grave                 	
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xCD I acute                 	
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xCE I circumflex            	
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xCF I umlaut                	
    0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x00, 0x00, 0xFF, 0xFF, // 0xD0 uppercase Eth           	
    0xFF, 0xFF, 0x01, 0x07, 0x0E, 0x18, 0x30, 0xE0, 0xFF, 0xFF, // 0xD1 N tilde                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xD2 O grave                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xD3 O acute                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xD4 O circumflex            	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xD5 O tilde                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xD6 O umlaut                	
    0x83, 0xC7, 0xEE, 0x7C, 0x38, 0x7C, 0xEE, 0xC7, 0x83, 0x00, // 0xD7 multiplication symbol   	
    0xFF, 0xFF, 0x80, 0xE0, 0x78, 0x1E, 0x07, 0x01, 0xFF, 0xFF, // 0xD8 O slash                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xD9 U grave                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xDA U acute                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xDB U circumflex            	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xDC U umlaut                	
    0x07, 0x0F, 0x18, 0x30, 0xE0, 0xE0, 0x30, 0x18, 0x0F, 0x07, // 0xDD Y acute                 	
    0xFF, 0xFF, 0x81, 0x81, 0x81, 0x81, 0x81, 0xC3, 0xFF, 0x7E, // 0xDE thorn                   	
    0xFF, 0xFF, 0x0C, 0x0C, 0x0C, 0x0C, 0x1B, 0x31, 0xE0, 0xC0, // 0xDF scharfes s              	
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0xE0 a grave                 	
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0xE1 a acute                 	
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0xE2 a circumflex            	
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0xE3 a tilde                 	
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0xE4 a umlaut                	
    0x00, 0xC0, 0xE7, 0x67, 0x67, 0x67, 0x67, 0xE7, 0xFE, 0xF8, // 0xE5 a ring                  	
    0x00, 0xC6, 0xE7, 0x67, 0xFE, 0xFE, 0xE7, 0xE7, 0xFE, 0xF8, // 0xE6 ae merged               	
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x80, // 0xE7 c cedilla               	
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0xE8 e grave                 	
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0xE9 e acute                 	
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0xEA e circumflex            	
    0xF8, 0xFE, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFE, 0xF8, // 0xEB e umlaut                	
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xEC i grave                 	
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xED i acute                 	
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xEE i circumflex            	
    0x00, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // 0xEF i umlaut                	
    0xE0, 0xF0, 0x18, 0x1D, 0x1D, 0x1C, 0x1C, 0x1B, 0xFF, 0xFE, // 0xF0 lowercase Eth           	
    0xFF, 0xFF, 0x18, 0x0E, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xF1 n tilde                 	
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xF2 o grave                 	
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xF3 o acute                 	
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xF4 o curcumflex            	
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xF5 o tilde                 	
    0xF8, 0xFE, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xF6 o umlaut                	
    0x18, 0x18, 0x18, 0x18, 0x99, 0x99, 0x18, 0x18, 0x18, 0x18, // 0xF7 division symbol         	
    0xF8, 0xFE, 0x07, 0x87, 0xC7, 0x77, 0x3F, 0x1E, 0xFF, 0xFB, // 0xF8 o slash                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xF9 u grave                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xFA u acute                 	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xFB u circumflex            	
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, // 0xFC u umlaut                	
    0x1F, 0x3F, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xFF, 0xFF, // 0xFD y acute                 	
    0xFF, 0xFF, 0x0C, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFE, 0xF8, // 0xFE thorn                   	
    0x1F, 0x3F, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xFF, 0xFF, // 0xFF y umlaut                	
    #endif
    };

    const TUSIGN8 FontLower[] =
    {
    // Bottom page Bit Patterns for Characters 0x01 to 0xFD
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x01  o + acute,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0x02  i + acute,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0x03  u + acute,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x04  a + acute,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x05  a + ring,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0x06  up arrow,
    0x00, 0x01, 0x03, 0x07, 0x1F, 0x1F, 0x07, 0x03, 0x01, 0x00, // 0x07  down arrow,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, // 0x08  three bars,
    0x1C, 0x1C, 0x00, 0x00, 0x1C, 0x1C, 0x00, 0x00, 0x1C, 0x1C, // 0x09  three dots,
    0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, // 0x0a  AE merged,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x0b  degree,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x0c  A + umlaut,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x0d  O + umlaut,
    0x07, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x0e  U + umlaut,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x0f  a + umlaut,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x10  o + umlaut,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0x11  u + umlaut,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x12  e + acute,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x13  e + grave,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x14  e + circumflex,
    0x01, 0x03, 0x2E, 0x6E, 0x6E, 0x6E, 0x7E, 0x7E, 0x03, 0x01, // 0x15  c + cedilla,
    0x1C, 0x1D, 0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x1D, 0x1C, // 0x16  omega,
    0x1C, 0x1E, 0x1F, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x17  epsilon,
    0x60, 0x70, 0x1F, 0x0F, 0x01, 0x03, 0x03, 0x03, 0x07, 0x07, // 0x18  micro,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x19  superscript 2,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x1a  superscript 3,
    0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, // 0x1b  ae merged,
    0x7F, 0x7F, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x1c  beta,
    0x1C, 0x1E, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x1d  N + tilde,
    0x00, 0x01, 0x03, 0x06, 0x1C, 0x18, 0x00, 0x00, 0x00, 0x00, // 0x1e  n + tilde,
    0x00, 0x00, 0x00, 0x00, 0x18, 0x1C, 0x06, 0x03, 0x01, 0x00, // 0x1f  o + slash,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x20  space,
    0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, // 0x21  !,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x22  double quotes,
    0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, // 0x23  #,
    0x03, 0x03, 0x03, 0x03, 0x1F, 0x1F, 0x03, 0x03, 0x01, 0x00, // 0x24  $,
    0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x1F, 0x1F, // 0x25  %,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, 0x1C, 0x1C, // 0x26  &,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x27  ',
    0x00, 0x00, 0x00, 0x03, 0x07, 0x0E, 0x1C, 0x1C, 0x00, 0x00, // 0x28  (,
    0x00, 0x00, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x00, 0x00, 0x00, // 0x29  ),
    0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, // 0x2a  *,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, // 0x2b  +,
    0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x03, 0x03, 0x00, 0x00, // 0x2c  comma,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x2d  -,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x1F, 0x1F, 0x06, 0x00, 0x00, // 0x2e  .,
    0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x2f  forward slash,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x30  0,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0x31  1,
    0x1C, 0x1E, 0x1F, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x32  2,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x07, // 0x33  3,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, // 0x34  4,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x35  5,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x36  6,
    0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x37  7,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x38  8,
    0x00, 0x00, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x00, // 0x39  9,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, // 0x3a  :,
    0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x07, 0x03, 0x00, 0x00, // 0x3b  ;,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x1C, 0x1C, // 0x3c  <,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x3d  =,
    0x00, 0x00, 0x1C, 0x1C, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, // 0x3e  >,
    0x00, 0x00, 0x00, 0x00, 0x1D, 0x1D, 0x00, 0x00, 0x00, 0x00, // 0x3f  ?,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x40  @,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x41  A,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x42  B,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x43  C,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x01, 0x00, // 0x44  D,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x45  E,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x46  F,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x47  G,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x48  H,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0x49  I,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, 0x00, 0x00, // 0x4a  J,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x1C, 0x18, // 0x4b  K,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x4c  L,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x4d  M,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x4e  N,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x4f  O,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x50  P,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1D, 0x1F, 0x06, 0x1F, 0x1D, // 0x51  Q,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x1C, 0x18, // 0x52  R,
    0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x07, // 0x53  S,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0x54  T,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x55  U,
    0x00, 0x01, 0x03, 0x06, 0x1C, 0x1C, 0x06, 0x03, 0x01, 0x00, // 0x56  V,
    0x03, 0x07, 0x1C, 0x1E, 0x03, 0x03, 0x1E, 0x1C, 0x07, 0x03, // 0x57  W,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x58  X,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0x59  Y,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x5a  Z,
    0x00, 0x00, 0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x00, 0x00, // 0x5b  [,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, // 0x5c  back slash,
    0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, 0x00, 0x00, // 0x5d  ],
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x5e  ^,
    0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x5f  _,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x60  `,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x61  a,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x62  b,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, // 0x63  c,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x64  d,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x65  e,
    0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x66  f,
    0x30, 0x33, 0x67, 0x66, 0x66, 0x66, 0x73, 0x3F, 0x1F, 0x00, // 0x67  g,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x68  h,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0x69  i,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, 0x00, 0x00, // 0x6a  j,
    0x1F, 0x1F, 0x00, 0x01, 0x03, 0x06, 0x1C, 0x18, 0x00, 0x00, // 0x6b  k,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0x6c  l,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x6d  m,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x6e  n,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x6f  o,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x70  p,
    0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x01, 0x1F, 0x1F, // 0x71  q,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x72  r,
    0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x07, // 0x73  s,
    0x00, 0x00, 0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x74  t,
    0x03, 0x07, 0x1E, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0x75  u,
    0x00, 0x01, 0x03, 0x06, 0x1C, 0x1C, 0x06, 0x03, 0x01, 0x00, // 0x76  v,
    0x03, 0x0F, 0x1C, 0x1E, 0x03, 0x03, 0x1E, 0x1C, 0x0F, 0x03, // 0x77  w,
    0x18, 0x1C, 0x06, 0x03, 0x00, 0x00, 0x03, 0x06, 0x1C, 0x18, // 0x78  x,
    0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x79  y,
    0x1C, 0x1E, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x7a  z,
    0x00, 0x00, 0x03, 0x07, 0x1E, 0x1C, 0x1C, 0x1C, 0x00, 0x00, // 0x7b  {,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0x7c  |,
    0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1E, 0x07, 0x03, 0x00, 0x00, // 0x7d  },
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x7e  ~,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x7f  not recognised,
    0x01, 0x07, 0x0E, 0x2E, 0x6E, 0x6E, 0x7E, 0x7E, 0x0F, 0x03, // 0x80  C + cedilla,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0x81  u + umlaut,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x82  e + acute,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x83  a + circumflex,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x84  a + umlaut,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x85  a + grave,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x86  a + ring,
    0x01, 0x03, 0x2E, 0x6E, 0x6E, 0x6E, 0x7E, 0x7E, 0x03, 0x01, // 0x87  c + cedilla,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x88  e + circumflex,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x89  e + umlaut,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x8a  e + grave,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0x8b  i + umlaut,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0x8c  i + circumflex,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0x8d  i + grave,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x8e  A + umlaut,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x8f  A + ring,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x90  E + acute,
    0x03, 0x07, 0x1C, 0x1C, 0x1F, 0x1F, 0x18, 0x1C, 0x0C, 0x00, // 0x91  ae merged,
    0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, // 0x92  AE merged,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x93  o + circumflex,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x94  o + umlaut,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x95  o + grave,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0x96  u + circumflex,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0x97  u + grave,
    0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x98  y + umlaut,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x99  O + umlaut,
    0x07, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x9a  U + umlaut,
    0x03, 0x07, 0x1F, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x9b  o + slash,
    0x1F, 0x1F, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0E, 0x1C, 0x18, // 0x9c  Ka (Cyr) lowercase,
    0x03, 0x07, 0x1D, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x9d  O + slash,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x9e  Be (Cyr) uppercase,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x9f  Be (Cyr) lowercase,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xa0  a + acute,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xa1  i + acute,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xa2  o + acute,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0xa3  u + acute,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xa4  n + tilde,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xa5  N + tilde,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xa6  Ge (Cyr) uppercase,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xa7  Ge (Cyr) lowercase,
    0x7F, 0x7F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, 0x78, 0x70, // 0xa8  De (Cyr) uppercase,
    0x7F, 0x7F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, 0x7C, 0x78, // 0xa9  De (Cyr) lowercase,
    0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, // 0xaa  Zhe (Cyr) uppercase,
    0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, // 0xab  Zhe (Cyr) lowercase,
    0x06, 0x0E, 0x1C, 0x1C, 0x18, 0x18, 0x1C, 0x1C, 0x0F, 0x07, // 0xac  Ze (Cyr) uppercase,
    0x06, 0x0E, 0x1C, 0x1C, 0x18, 0x18, 0x1C, 0x1C, 0x0F, 0x07, // 0xad  Ze (Cyr) lowercase,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xae  I (Cyr) uppercase,
    0x1F, 0x1F, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xaf  I (Cyr) lowercase,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb0  Short I (Cyr) uppercase
    0x1F, 0x1F, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb1  Short I (Cyr) lowercase
    0x1C, 0x1E, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb2  El (Cyr) uppercase,
    0x1C, 0x1E, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb3  El (Cyr) lowercase,
    0x1F, 0x1F, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x1F, 0x1F, // 0xb4  Em (Cyr) lowercase,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb5  A + acute,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb6  A + circumflex,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb7  A + grave,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb8  Pe (Cyr) uppercase,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xb9  Pe (Cyr) lowercase,
    0x1C, 0x1C, 0x0E, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xba  U (Cyr) uppercase,
    0x70, 0x70, 0x38, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, // 0xbb  U (Cyr) lowercase,
    0x00, 0x01, 0x07, 0x07, 0x1F, 0x1F, 0x07, 0x07, 0x01, 0x00, // 0xbc  Ef (Cyr) uppercase,
    0x03, 0x0F, 0x0C, 0x06, 0x7F, 0x7F, 0x06, 0x0C, 0x0F, 0x03, // 0xbd  Ef (Cyr) lowercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, 0x7C, 0x7C, // 0xbe  Tse (Cyr) uppercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, 0x7C, 0x7C, // 0xbf  Tse (Cyr) lowercase,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xc0  Che (Cyr) uppercase,
    0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x1F, 0x1F, // 0xc1  Che (Cyr) lowercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x1F, 0x1F, // 0xc2  Sha (Cyr) uppercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x1F, 0x1F, // 0xc3  Sha (Cyr) lowercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x7F, 0x7F, // 0xc4  Shcha (Cyr) uppercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x7F, 0x7F, // 0xc5  Shcha (Cyr) lowercase,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xc6  a + tilde,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xc7  A + tilde,
    0x00, 0x00, 0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xc8  Yer (Cyr) uppercase,
    0x00, 0x00, 0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xc9  Yer (Cyr) lowercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x07, 0x03, 0x00, 0x1F, 0x1F, // 0xca  Yery (Cyr) uppercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x07, 0x03, 0x00, 0x1F, 0x1F, // 0xcb  Yery (Cyr) lowercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xcc  Soft (Cyr) uppercase,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xcd  Soft (Cyr) lowercase,
    0x03, 0x07, 0x0E, 0x1C, 0x1C, 0x1C, 0x1C, 0x0E, 0x07, 0x01, // 0xce  E (Cyr) uppercase,
    0x03, 0x07, 0x0E, 0x1C, 0x1C, 0x1C, 0x1C, 0x0E, 0x07, 0x01, // 0xcf  E (Cyr) lowercase,
    0x1F, 0x1F, 0x00, 0x00, 0x03, 0x0F, 0x1C, 0x1C, 0x0F, 0x03, // 0xd0  Yu (Cyr),
    0x1F, 0x00, 0x00, 0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xd1  Yu (Cyr),
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xd2  E + circumflex,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xd3  E + umlaut,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xd4  E + grave,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xd5  En (Cyr) lowercase,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xd6  I + acute,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xd7  I + circumflex,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xd8  I + umlaut,
    0x18, 0x1C, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xd9  Ya (Cyr) uppercase,
    0x18, 0x1C, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xda  Ya (Cyr) lowercase,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x30, 0x4F, 0x4F, 0x20, // 0xdb  A + Ogonek,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x3C, 0x5F, 0x4F, 0x20, // 0xdc  a + Ogonek,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xdd  Ve (Cyr) lowercase,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xde  I + grave,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xdf  Te (Cyr) lowercase,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xe0  O + acute,
    0x7F, 0x7F, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xe1  beta or scharfes S,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xe2  O + circumflex,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xe3  O + grave,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xe4  o + tilde,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xe5  O + tilde,
    0x60, 0x70, 0x1F, 0x0F, 0x01, 0x03, 0x03, 0x03, 0x07, 0x07, // 0xe6  mu,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xe7  C + acute,
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, // 0xe8  c + acute,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xe9  U + acute,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xea  U + circumflex,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xeb  U + grave,
    0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xec  y + acute,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xed  Y + acute,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x3C, 0x5C, 0x4C, 0x20, // 0xee  E + Ogonek,
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x3C, 0x5C, 0x4C, 0x20, // 0xef  e + Ogonek,
    0x00, 0x00, 0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xf0  L + stroke,
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xf1  l + stroke,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xf2  N + acute,
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xf3  n + acute,
    0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x07, // 0xf4  S + acute,
    0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x07, // 0xf5  s + acute,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xf6  Z + acute,
    0x1C, 0x1E, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xf7  z + acute,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xf8  degree,
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xf9  Z + single dot above,
    0x1C, 0x1E, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xfa  z + single dot above,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xfb  Y + umlaut,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xfc  superscript 3,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xfd  superscript 2,
    #ifdef INCLUDE_TURKISH_PATTERNS
    0x30, 0x33, 0x67, 0x66, 0x66, 0x66, 0x73, 0x3F, 0x1F, 0x00, // 0xA6 TURKISH  g breve
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xA7 TURKISH  i dotless
    0x00, 0x0E, 0x2E, 0x6E, 0x6E, 0x6E, 0x7E, 0x36, 0x07, 0x03, // 0xA8 TURKISH  s cedilla
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xA9 TURKISH  I dotted
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xAA TURKISH  G breve
    0x00, 0x0E, 0x2E, 0x6E, 0x6E, 0x6E, 0x7E, 0x36, 0x07, 0x03, // 0xAB TURKISH  S cedilla
    #endif
    #ifdef INCLUDE_KATAKANA_PATTERNS
    0x0F, 0x1F, 0x19, 0x19, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, // 0xA1 Katakana                	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA2 Katakana                	
    0x18, 0x18, 0x18, 0x18, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xA3 Katakana                	
    0x00, 0x00, 0x03, 0x07, 0x1E, 0x1C, 0x00, 0x00, 0x00, 0x00, // 0xA4 Katakana                	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA5 Katakana dot            	
    0x00, 0x00, 0x18, 0x18, 0x0C, 0x07, 0x03, 0x00, 0x00, 0x00, // 0xA6 Katakana wo             	
    0x00, 0x00, 0x00, 0x18, 0x18, 0x0C, 0x07, 0x03, 0x00, 0x00, // 0xA7 Katakana hu (small)     	
    0x01, 0x01, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xA8 Katakana I(small)       	
    0x00, 0x00, 0x00, 0x00, 0x18, 0x1C, 0x0E, 0x06, 0x03, 0x01, // 0xA9 Katakana u(small)       	
    0x18, 0x18, 0x18, 0x18, 0x1F, 0x1F, 0x18, 0x18, 0x18, 0x18, // 0xAA Katakana e(small)       	
    0x0C, 0x0E, 0x07, 0x03, 0x01, 0x18, 0x1F, 0x0F, 0x00, 0x00, // 0xAB Katakana o(small)       	
    0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, // 0xAC Katakana ya(small)      	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x1F, 0x18, 0x18, // 0xAD Katakana yu(small)      	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3F, 0x3F, 0x00, 0x00, // 0xAE Katakana yo(small)      	
    0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x03, // 0xAF Katakana tu(small)      	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB0 Katakana -              	
    0x00, 0x18, 0x1C, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB1 Katakana a              	
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xB2 Katakana I              	
    0x00, 0x00, 0x00, 0x18, 0x18, 0x0C, 0x0E, 0x07, 0x03, 0x00, // 0xB3 Katakana u              	
    0x18, 0x18, 0x18, 0x18, 0x1F, 0x1F, 0x18, 0x18, 0x18, 0x18, // 0xB4 Katakana e              	
    0x01, 0x01, 0x00, 0x00, 0x18, 0x18, 0x1F, 0x0F, 0x00, 0x00, // 0xB5 Katakana o              	
    0x18, 0x1E, 0x07, 0x01, 0x00, 0x18, 0x18, 0x1C, 0x0F, 0x07, // 0xB6 Katakana ka             	
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xB7 Katakana ki             	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x00, // 0xB8 Katakana ku             	
    0x00, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x00, 0x00, 0x00, // 0xB9 Katakana ke             	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3F, 0x3F, // 0xBA Katakana ko             	
    0x00, 0x00, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x00, 0x00, 0x00, // 0xBB Katakana sa             	
    0x00, 0x18, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, // 0xBC Katakana shi            	
    0x18, 0x1C, 0x0C, 0x06, 0x07, 0x03, 0x07, 0x0E, 0x1C, 0x18, // 0xBD Katakana su             	
    0x00, 0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x18, // 0xBE Katakana se             	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, // 0xBF Katakana so             	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, // 0xC0 Katakana ta             	
    0x00, 0x18, 0x18, 0x1C, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, // 0xC1 Katakana chi            	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, // 0xC2 Katakana tu             	
    0x00, 0x18, 0x18, 0x1C, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, // 0xC3 Katakana te             	
    0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xC4 Katakana to             	
    0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xC5 Katakana na             	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, // 0xC6 Katakana ni             	
    0x18, 0x1C, 0x0C, 0x06, 0x07, 0x03, 0x01, 0x03, 0x07, 0x06, // 0xC7 Katakana nu             	
    0x01, 0x01, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x01, 0x01, // 0xC8 Katakana ne             	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, // 0xC9 Katakana no             	
    0x18, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xCA Katakana ha             	
    0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, // 0xCB Katakana hi             	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, // 0xCC Katakana hu             	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, // 0xCD Katakana he             	
    0x03, 0x03, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x03, 0x03, // 0xCE Katakana ho             	
    0x00, 0x00, 0x01, 0x03, 0x07, 0x0F, 0x1D, 0x18, 0x00, 0x00, // 0xCF Katakana ma             	
    0x00, 0x00, 0x03, 0x03, 0x03, 0x06, 0x06, 0x06, 0x06, 0x00, // 0xD0 Katakana mi             	
    0x07, 0x07, 0x06, 0x06, 0x07, 0x03, 0x03, 0x0F, 0x1E, 0x18, // 0xD1 Katakana mu             	
    0x18, 0x1C, 0x0E, 0x07, 0x03, 0x01, 0x03, 0x07, 0x06, 0x00, // 0xD2 Katakana me             	
    0x00, 0x00, 0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x18, // 0xD3 Katakana mo             	
    0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xD4 Katakana ya             	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x1F, 0x18, 0x18, // 0xD5 Katakana yu             	
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3F, 0x3F, // 0xD6 Katakana yo             	
    0x00, 0x00, 0x00, 0x18, 0x18, 0x0C, 0x07, 0x03, 0x00, 0x00, // 0xD7 Katakana ra             	
    0x00, 0x00, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x01, 0x00, // 0xD8 Katakana ri             	
    0x18, 0x1F, 0x07, 0x00, 0x00, 0x0F, 0x1F, 0x0E, 0x07, 0x03, // 0xD9 Katakana ru             	
    0x0F, 0x1F, 0x0C, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, // 0xDA Katakana re             	
    0x3F, 0x3F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3F, 0x3F, // 0xDB Katakana ro             	
    0x00, 0x00, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, // 0xDC Katakana wa             	
    0x00, 0x18, 0x18, 0x18, 0x18, 0x1C, 0x0E, 0x07, 0x01, 0x00, // 0xDD Katakana n              	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xDE Katakana                	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xDF Katakana                	
    #endif
    #ifdef INCLUDE_RUSSIAN_PATTERNS
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x8A Cyrillic Uppercase A 	
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x8B Cyrillic Uppercase Ve	
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0x8C Cyrillic Uppercase Io	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x1C, 0x18, // 0x8D Cyrillic Uppercase Ka	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x8E Cyrillic Uppercase Em	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x8F Cyrillic Uppercase En	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x90 Cyrillic Uppercase O 	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x91 Cyrillic Uppercase Er	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0x92 Cyrillic Uppercase Es	
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0x93 Cyrillic Uppercase Te	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0x94 Cyrillic Lowercase A 	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0x95 Cyrillic Lowercase Ie	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0x96 Cyrillic Lowercase O 	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x97 Cyrillic Lowercase Er	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, // 0x98 Cyrillic Lowercase Es	
    0x18, 0x1C, 0x06, 0x03, 0x00, 0x00, 0x03, 0x06, 0x1C, 0x18, // 0x99 Cyrillic Lowercase Ha	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0x9A Cyrillic Uppercase Ha	
    #endif
    #ifdef INCLUDE_LATIN1_PATTERNS
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA0 non breaking space
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xA1 inverted exclamation    	
    0x00, 0x00, 0x03, 0x03, 0x1F, 0x1F, 0x03, 0x03, 0x00, 0x00, // 0xA2 cent (currency)         	
    0x18, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xA3 pound Sign              	
    0x03, 0x03, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x03, // 0xA4 currency symbol         	
    0x01, 0x01, 0x01, 0x01, 0x1F, 0x1F, 0x01, 0x01, 0x01, 0x01, // 0xA5 yen symbol              	
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xA6 vertical bar            	
    0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x07, // 0xA7 section sign            	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xA8 umlaut                  	
    0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, // 0xA9 copyright symbol        	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAA superscript a           	
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, // 0xAB guillemets <<           	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAC negation symbol         	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAD soft hyphen             	
    0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, // 0xAE reg'd trademark symbol  	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xAF Macron                  	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB0 degree symbol           	
    0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // 0xB1 plus/minus sign         	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB2 superscript 2           	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB3 superscript 3           	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB4 acute                   	
    0x60, 0x70, 0x1F, 0x0F, 0x01, 0x03, 0x03, 0x03, 0x07, 0x07, // 0xB5 mu                      	
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, // 0xB6 pilcrow                 	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB7 interpunct              	
    0x00, 0x00, 0x00, 0x20, 0x60, 0x68, 0x78, 0x30, 0x00, 0x00, // 0xB8 cedilla                 	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xB9 superscript 1           	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0xBA superscript o           	
    0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // 0xBB guillemets >>           	
    0x00, 0x00, 0x03, 0x02, 0x02, 0x0F, 0x02, 0x00, 0x00, 0x00, // 0xBC quarter                 	
    0x00, 0x00, 0x08, 0x0C, 0x0A, 0x09, 0x08, 0x00, 0x00, 0x00, // 0xBD half                    	
    0x00, 0x00, 0x03, 0x02, 0x02, 0x0F, 0x02, 0x00, 0x00, 0x00, // 0xBE three quarters          	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xBF inverted question mark  	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xC0 A grave                 	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xC1 A acute                 	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xC2 A circumflex            	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xC3 A tilde                 	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xC4 A umlaut                	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xC5 A ring                  	
    0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, // 0xC6 AE merged               	
    0x01, 0x07, 0x0E, 0x2E, 0x6E, 0x6E, 0x7E, 0x7E, 0x0F, 0x03, // 0xC7 C cedilla               	
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xC8 E grave                 	
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xC9 E acute                 	
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xCA E cedilla               	
    0x1F, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 0xCB E umlaut                	
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xCC I grave                 	
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xCD I acute                 	
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xCE I circumflex            	
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xCF I umlaut                	
    0x00, 0x00, 0x1F, 0x1F, 0x1C, 0x1C, 0x06, 0x03, 0x01, 0x00, // 0xD0 uppercase Eth           	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xD1 N tilde                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xD2 O grave                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xD3 O acute                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xD4 O circumflex            	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xD5 O tilde                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xD6 O umlaut                	
    0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, // 0xD7 multiplication symbol   	
    0x1B, 0x1F, 0x07, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xD8 O slash                 	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xD9 U grave                 	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xDA U acute                 	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xDB U circumflex            	
    0x07, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xDC U umlaut                	
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, // 0xDD Y acute                 	
    0x1F, 0x1F, 0x19, 0x19, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, // 0xDE thorn                   	
    0x7F, 0x7F, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0x03, // 0xDF scharfes s              	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xE0 a grave                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xE1 a acute                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xE2 a circumflex            	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xE3 a tilde                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xE4 a umlaut                	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1F, // 0xE5 a ring                  	
    0x03, 0x07, 0x1C, 0x1C, 0x1F, 0x1F, 0x18, 0x1C, 0x0C, 0x00, // 0xE6 ae merged               	
    0x01, 0x03, 0x2E, 0x6E, 0x6E, 0x6E, 0x7E, 0x7E, 0x03, 0x01, // 0xE7 c cedilla               	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0xE8 e grave                 	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0xE9 e acute                 	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0xEA e circumflex            	
    0x03, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, // 0xEB e umlaut                	
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xEC i grave                 	
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xED i acute                 	
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xEE i circumflex            	
    0x00, 0x00, 0x1C, 0x1C, 0x1F, 0x1F, 0x1C, 0x1C, 0x00, 0x00, // 0xEF i umlaut                	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xF0 lowercase Eth           	
    0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, // 0xF1 n tilde                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xF2 o grave                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xF3 o acute                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xF4 o curcumflex            	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xF5 o tilde                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xF6 o umlaut                	
    0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, // 0xF7 division symbol         	
    0x1B, 0x1F, 0x0F, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xF8 o slash                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0xF9 u grave                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0xFA u acute                 	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0xFB u circumflex            	
    0x03, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x03, 0x1F, 0x1F, // 0xFC u umlaut                	
    0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xFD y acute                 	
    0x7F, 0x7F, 0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xFE thorn                   	
    0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x07, 0x03, // 0xFF y umlaut                	
    #endif
    };

#elif defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION)

    //---------------------------------------------------------------
    // Implementation type 3 or type 2

    const unsigned char FontTable[] =
    {
    BIT_BATTERNS_0x01_to_0x05,          // Bit Patterns for Characters 0x01 to 0x05
    BIT_BATTERNS_0x06_to_0x09,          // Bit Patterns for Characters 0x06 to 0x09
    BIT_BATTERN_0x0A_TYPE_2_3,          // Bit Patterns for Character  0x0A         (TYPE_2 & TYPE_3 versions)
    BIT_BATTERNS_0x0B_to_0x1A,          // Bit Patterns for Characters 0x0B to 0x1A
    BIT_BATTERN_0x1B_TYPE_2_3,          // Bit Patterns for Character  0x1B         (TYPE_2 & TYPE_3 versions)
    BIT_BATTERN_0x1C,                   // Bit Patterns for Character  0x1C
    BIT_BATTERNS_0x1D_to_0x1F_TYPE_2_3, // Bit Patterns for Characters 0x1D to 0x1F (TYPE_2 & TYPE_3 versions)
    BIT_BATTERNS_0x20_to_0x38,          // Bit Patterns for Characters 0x20 to 0x38
    BIT_BATTERNS_0x39_to_0x7E,          // Bit Patterns for Characters 0x39 to 0x7E
    BIT_BATTERN_0x7F,                   // Bit Patterns for Character  0x7F
    BIT_BATTERNS_0x80_to_0xFD,          // Bit Patterns for Characters 0x80 to 0xFD
    #ifdef INCLUDE_TURKISH_PATTERNS
    BIT_BATTERNS_0xA6_to_0xAB_TURKISH,  // Bit Patterns for Turkish Characters 0xA6 to 0xAB
    #endif
    #ifdef INCLUDE_KATAKANA_PATTERNS
    BIT_BATTERNS_0xA1_to_0xDF_KATAKANA, // Bit Patterns for Katakana Characters 0xA1 to 0xDF
    #endif
    #ifdef INCLUDE_RUSSIAN_PATTERNS
    BIT_BATTERNS_0x8A_to_0x9A_RUSSIAN,  // Bit Patterns for Cyrillic characters 0x8A to 0x9A
    #endif
    #ifdef INCLUDE_LATIN1_PATTERNS
    BIT_PATTERNS_0xA0_to_0xFF_LATIN1    // Bit Patterns for Latin1 characters 0xA0 to 0xFF
    #endif
    };

#else

    //---------------------------------------------------------------
    // Implementation type 1

    #ifdef _NONVOL_IMPLEMENTATION

        #pragma constseg = INFO
        const unsigned char FontTableLower[] =
        {
            BIT_BATTERNS_0x06_to_0x09,          // Bit Patterns for Characters 0x06 to 0x09
            BIT_BATTERN_0x0A_TYPE_1,            // Bit Patterns for Character  0x0A         (TYPE_1 versions)
            BIT_BATTERNS_0x0B_to_0x1A,          // Bit Patterns for Characters 0x0B to 0x1A
            BIT_BATTERN_0x1B_TYPE_1,            // Bit Patterns for Character  0x1B         (TYPE_1 versions)
            BIT_BATTERN_0x1C,                   // Bit Patterns for Character  0x1C
            BIT_BATTERNS_0x1D_to_0x1F_TYPE_1,   // Bit Patterns for Characters 0x1D to 0x1F (TYPE_1 versions)
            BIT_BATTERNS_0x20_to_0x38           // Bit Patterns for Characters 0x20 to 0x38
        };

        #pragma memory = default

        const unsigned char FontTableUpper[] =
        {
            BIT_BATTERNS_0x39_to_0x7E           // Bit Patterns for Characters 0x39 to 0x7E
        };

    #else // else condition for #ifdef _NONVOL_IMPLEMENTATION

        const unsigned char FontTable[] =
        {
            //BIT_BATTERNS_0x06_to_0x1F_TYPE_1,   // Bit Patterns for Characters 0x06 to 0x1F (TYPE_1 versions)
            BIT_BATTERNS_0x06_to_0x09,          // Bit Patterns for Characters 0x06 to 0x09
            BIT_BATTERN_0x0A_TYPE_1,            // Bit Patterns for Character  0x0A         (TYPE_1 versions)
            BIT_BATTERNS_0x0B_to_0x1A,          // Bit Patterns for Characters 0x0B to 0x1A
            BIT_BATTERN_0x1B_TYPE_1,            // Bit Patterns for Character  0x1B         (TYPE_1 versions)
            BIT_BATTERN_0x1C,                   // Bit Patterns for Character  0x1C
            BIT_BATTERNS_0x1D_to_0x1F_TYPE_1,   // Bit Patterns for Characters 0x1D to 0x1F (TYPE_1 versions)

            BIT_BATTERNS_0x20_to_0x38,          // Bit Patterns for Characters 0x20 to 0x38
            BIT_BATTERNS_0x39_to_0x7E           // Bit Patterns for Characters 0x39 to 0x7E
        };

    #endif // end of else condition for #ifdef _NONVOL_IMPLEMENTATION

#endif // end of STANDARD FONT TABLES

//----------------------------------------------------------------------------------------------------------
// SPECIAL_SMOOTHED FONT TABLES
//----------------------------------------------------------------------------------------------------------
#if (defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION)) && (!defined(DISABLE_SMOOTH_FONT))

    // Bit Patterns for the smoothed font size 2
    const unsigned char TrueFont_2[13][2][6] =
    {
        FONT_2_SMOOTH_MINUS,        // character = '-'
        FONT_2_SMOOTH_DP,           // character = '.'
        FONT_2_SMOOTH_FWD_SLASH,    // character = "/"
        FONT_2_SMOOTH_0,            // character = '0'
        FONT_2_SMOOTH_1,            // character = '1'
        FONT_2_SMOOTH_2,            // character = '2'
        FONT_2_SMOOTH_3,            // character = '3'
        FONT_2_SMOOTH_4,            // character = '4'
        FONT_2_SMOOTH_5,            // character = '5'
        FONT_2_SMOOTH_6,            // character = '6'
        FONT_2_SMOOTH_7,            // character = '7'
        FONT_2_SMOOTH_8,            // character = '8'
        FONT_2_SMOOTH_9             // character = '9'
    };

    // Bit Patterns for the smoothed font size 4
    const unsigned char TrueFont_4[13][3][18] =
    {
        FONT_4_SMOOTH_MINUS,        // character = '-'
        FONT_4_SMOOTH_DP,           // character = '.'
        FONT_4_SMOOTH_FWD_SLASH,    // character = "/"
        FONT_4_SMOOTH_0,            // character = '0'
        FONT_4_SMOOTH_1,            // character = '1'
        FONT_4_SMOOTH_2,            // character = '2'
        FONT_4_SMOOTH_3,            // character = '3'
        FONT_4_SMOOTH_4,            // character = '4'
        FONT_4_SMOOTH_5,            // character = '5'
        FONT_4_SMOOTH_6,            // character = '6'
        FONT_4_SMOOTH_7,            // character = '7'
        FONT_4_SMOOTH_8,            // character = '8'
        FONT_4_SMOOTH_9             // character = '9'
    };

    // Bit Patterns for the smoothed font size 5
    const unsigned char TrueFont_5[13][4][24] =
    {
        FONT_5_SMOOTH_MINUS,        // character = '-'
        FONT_5_SMOOTH_DP,           // character = '.'
        FONT_5_SMOOTH_FWD_SLASH,    // character = "/"
        FONT_5_SMOOTH_0,            // character = '0'
        FONT_5_SMOOTH_1,            // character = '1'
        FONT_5_SMOOTH_2,            // character = '2'
        FONT_5_SMOOTH_3,            // character = '3'
        FONT_5_SMOOTH_4,            // character = '4'
        FONT_5_SMOOTH_5,            // character = '5'
        FONT_5_SMOOTH_6,            // character = '6'
        FONT_5_SMOOTH_7,            // character = '7'
        FONT_5_SMOOTH_8,            // character = '8'
        FONT_5_SMOOTH_9             // character = '9'
    };

#endif  // end of #if (defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION)) && (!defined(DISABLE_SMOOTH_FONT))

//---------------------------------------------------------------------------------------------------------------------------------------------------------------
// ANIMATED ICONS
// The elements in "animatedIconTable[][]", "smallIconTable[][]" and the enum definition "ICON_PART_TYPE" (in See FixedIconDefinitions.h) are all related
// and any change in one must be reflected in the others. All are used in the MSP430 low level driver so no changes should be made without consideration of this
//---------------------------------------------------------------------------------------------------------------------------------------------------------------
#if defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION) || (defined(TYPE_1_IMPLEMENTATION) && !defined(_NONVOL_IMPLEMENTATION))

    // Bit Patterns for Animated Icons
    const unsigned char animatedIconTable[][25] =
    {
    /* ICON_PART_BLANK          */ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    /* ICON_PART_DIAL_T1        */ {0x00, 0x80, 0x60, 0x10, 0x48, 0x84, 0x04, 0x02, 0x1A, 0xE2, 0x01, 0x01, 0x1D, 0x01, 0x01, 0x22, 0x1A, 0x02, 0x04, 0x84, 0x48, 0x10, 0x60, 0x80, 0x00},
    /* ICON_PART_DIAL_T2        */ {0x00, 0x80, 0x60, 0x10, 0x48, 0x84, 0x04, 0x02, 0x1A, 0x02, 0x01, 0x01, 0x1D, 0x01, 0x01, 0xE2, 0x1A, 0x02, 0x04, 0x84, 0x48, 0x10, 0x60, 0x80, 0x00},
    /* ICON_PART_DIAL_C1        */ {0x7E, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0xE0, 0xE0, 0x00, 0x00, 0xE0, 0x20, 0xA0, 0xE0, 0x80, 0x80, 0x80, 0x81, 0xFE},
    /* ICON_PART_DIAL_C2        */ {0x7E, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xFC, 0x03, 0x00, 0xE0, 0x20, 0xA0, 0xE0, 0x80, 0x80, 0x80, 0x81, 0xFE},
    /* ICON_PART_DIAL_B         */ {0x00, 0x01, 0x06, 0x08, 0x10, 0x20, 0x20, 0x40, 0x40, 0x40, 0x80, 0x80, 0x80, 0x80, 0x80, 0x40, 0x4F, 0x48, 0x2B, 0x2F, 0x13, 0x0B, 0x07, 0x03, 0x03},

    /* ICON_PART_SCRWDRV_C1     */ {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xF0, 0x70, 0x70, 0xF0, 0x20, 0xF0, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xE0},
    /* ICON_PART_SCRWDRV_C2     */ {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xF0, 0x50, 0x50, 0xF0, 0x20, 0xF0, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0xE0},
    /* ICON_PART_SCRWDRV_B1     */ {0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x1F, 0x14, 0x14, 0x1F, 0x08, 0x1F, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x0F},
    /* ICON_PART_SCRWDRV_B2     */ {0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x1F, 0x1C, 0x1C, 0x1F, 0x08, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F},

    /* ICON_PART_DEVICE_T       */ {0x00, 0xC0, 0x30, 0xC8, 0x24, 0x94, 0x8A, 0x8A, 0x89, 0x85, 0x85, 0x85, 0x85, 0x89, 0x8A, 0x8A, 0x94, 0x24, 0xC8, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00},
    /* ICON_PART_DEVICE_B       */ {0x00, 0x00, 0x03, 0x04, 0x09, 0x0A, 0xF4, 0x94, 0x94, 0xA8, 0xA8, 0xA8, 0xA8, 0x94, 0x94, 0xF4, 0x0A, 0x09, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00},
    /* ICON_PART_DEV_CLR_DISP   */ {0x3F, 0xC0, 0x1E, 0xE1, 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7F, 0x00, 0xE1, 0x1E, 0xC0, 0x3F, 0x00, 0x00, 0x00},
    /* ICON_PART_DEV_BLK_DISP   */ {0x3F, 0xC0, 0x1E, 0xE1, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x00, 0xE1, 0x1E, 0xC0, 0x3F, 0x00, 0x00, 0x00},

    /* ICON_PART_BELLOWS_C1     */ {0x80, 0xC0, 0xE0, 0xF0, 0xC0, 0xC0, 0xC0, 0x00, 0xDF, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0x21, 0xDF},
    /* ICON_PART_BELLOWS_C2     */ {0x80, 0xC0, 0xE0, 0xF0, 0xC0, 0xC0, 0xC0, 0x00, 0x60, 0xA0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xA0, 0x60},
    /* ICON_PART_BELLOWS_C3     */ {0x80, 0xC0, 0xE0, 0xF0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},

    /* ICON_PART_BELLOWS_B1     */ {0x00, 0x01, 0x03, 0x07, 0x01, 0x01, 0x01, 0x00, 0xFB, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0xFB},
    /* ICON_PART_BELLOWS_B2     */ {0x00, 0x01, 0x03, 0x07, 0x01, 0x01, 0x01, 0x00, 0xC4, 0xAA, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0xAA, 0xC4},
    /* ICON_PART_BELLOWS_B3     */ {0x00, 0x01, 0x03, 0x07, 0x01, 0x01, 0x01, 0x00, 0x92, 0xD6, 0xD6, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xD6, 0xD6, 0x92},

    /* ICON_PART_COMMS_C1       */ {0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7E, 0x02, 0x7E, 0x40, 0x7E, 0x02, 0x7E, 0x40, 0x7E, 0x02, 0x7E, 0x40, 0x40},
    /* ICON_PART_COMMS_C2       */ {0x40, 0x40, 0x7E, 0x02, 0x7E, 0x40, 0x7E, 0x02, 0x7E, 0x40, 0x7E, 0x02, 0x7E, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40},

    /* ICON_PART_DISPLAY_T      */ {0xC0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x00, 0x00, 0x00},
    /* ICON_PART_DISPLAY_NEG    */ {0xFF, 0x00, 0xFF, 0xBB, 0x81, 0xBF, 0xFF, 0xFF, 0xBB, 0x9D, 0xAD, 0xAD, 0xB3, 0xFF, 0xDB, 0xBD, 0xBD, 0xB5, 0xCB, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00},
    /* ICON_PART_DISPLAY_POS    */ {0xFF, 0x00, 0x00, 0x44, 0x7E, 0x40, 0x00, 0x00, 0x44, 0x62, 0x52, 0x52, 0x4C, 0x00, 0x24, 0x42, 0x42, 0x4A, 0x34, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00},
    /* ICON_PART_DISPLAY_B      */ {0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00},

    /* ICON_PART_MAGNIFY_T      */ {0x00, 0x80, 0x60, 0x10, 0x10, 0x08, 0x08, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x10, 0x10, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    /* ICON_PART_MAGNIFY_B      */ {0x00, 0x00, 0x03, 0x04, 0x04, 0x08, 0x08, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x08, 0x04, 0x04, 0x0B, 0x1C, 0x38, 0x70, 0xE0, 0xC0, 0x00, 0x00, 0x00},

    /* ICON_PART_MAGNIFY_C1     */ {0x3E, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    /* ICON_PART_MAGNIFY_C2     */ {0x3E, 0xC1, 0x42, 0x7F, 0x40, 0x00, 0x42, 0x61, 0x51, 0x49, 0x46, 0x00, 0x22, 0x41, 0x49, 0x49, 0x36, 0xC1, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
    };

#endif  // end of #if defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION) || (defined(TYPE_1_IMPLEMENTATION) && !defined(_NONVOL_IMPLEMENTATION))

//---------------------------------------------------------------------------------------------------------------------------------------------------------------
// SMALL ICONS
// The elements in "animatedIconTable[][]", "smallIconTable[][]" and the enum definition "ICON_PART_TYPE" (in See FixedIconDefinitions.h) are all related
// and any change in one must be reflected in the others. All are used in the MSP430 low level driver so no changes should be made without consideration of this
//---------------------------------------------------------------------------------------------------------------------------------------------------------------
#if defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION) || (defined(TYPE_1_IMPLEMENTATION) && !defined(_NONVOL_IMPLEMENTATION))

    // Bit Patterns for small Icons
    const unsigned char smallIconTable[][12] =
    {
	/* numberEditIcon               */ {0x00, 0x48, 0x7C, 0x40, 0x00, 0x32, 0x2A, 0x24, 0x00, 0x15, 0x15, 0x0A},
	/* stringEditIcon               */ {0x00, 0x78, 0x14, 0x78, 0x00, 0x3E, 0x2A, 0x14, 0x00, 0x0E, 0x11, 0x11},
    /* enumEditIcon                 */ {0x00, 0x70, 0x50, 0x5C, 0x54, 0x57, 0x55, 0x75, 0x15, 0x1D, 0x05, 0x07},
	/* adjustEditIcon1              */ {0x00, 0x00, 0x00, 0x80, 0x60, 0xD0, 0xC8, 0xE4, 0x72, 0x39, 0x1E, 0x0C},
	/* adjustEditIcon2              */ {0x04, 0x06, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	/* softKeyIconNextOperatorFrame */ {0x00, 0x7E, 0x77, 0x77, 0x77, 0x77, 0x41, 0x63, 0x77, 0x7F, 0x7E, 0x00},
	/* softKeyIconMenu              */ {0x00, 0x7E, 0x7F, 0x6B, 0x7F, 0x6B, 0x6B, 0x6B, 0x6B, 0x7F, 0x7E, 0x00},
	/* warningTriangleIcon          */ {0xBF, 0x9F, 0x8F, 0x87, 0x83, 0xDD, 0x83, 0x87, 0x8F, 0x9F, 0xBF, 0xFF},
	/* informationIcon              */ {0xFF, 0xFF, 0xFF, 0xFF, 0xB7, 0x85, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
	/* alarmBellIcon                */ {0xFF, 0xFF, 0xFF, 0xDF, 0xC3, 0x81, 0xC3, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF},
    /* previous frame               */ {0x00, 0x7E, 0x7F, 0x77, 0x63, 0x41, 0x77, 0x77, 0x77, 0x77, 0x7E, 0x00},
    /* lock                         */ {0x00, 0x00, 0x00, 0x78, 0x7E, 0x79, 0x49, 0x79, 0x7E, 0x78, 0x00, 0x00}
    };

#endif  // end of #if defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION) || (defined(TYPE_1_IMPLEMENTATION) && !defined(_NONVOL_IMPLEMENTATION))

//----------------------------------------------------------------------------------------------------------
// LOGOS
//----------------------------------------------------------------------------------------------------------
#if defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION) || (defined(TYPE_1_IMPLEMENTATION) && !defined(_NONVOL_IMPLEMENTATION))

    #ifdef TYPE_1_IMPLEMENTATION
        #pragma constseg = INFO
    #endif

    // Bit Patterns for Logos - Tables are in a top to bottom page order
    const unsigned char abbLogo[] =

    #if defined (OEM_BLANK)
    {
        // Blank screen
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
    #elif defined(OEM_HMI_BUTTONS)
    {
        // Representation of the HMI buttons
        0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,	
        0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xC0, 0x40, 0x40, 0x40,	
        0x40, 0x40, 0x40, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80,	
        0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

        0x07, 0x1C, 0x30, 0x60, 0xCC, 0x9C, 0x1C, 0x3C, 0x7C, 0xFC, 0xFC, 0xE0, 0x00, 0x00, 0x00, 0x00,	
        0xF0, 0x1C, 0x06, 0x03, 0xE0, 0xB8, 0x8C, 0x86, 0x83, 0x81, 0x81, 0x80, 0x90, 0x98, 0x9C, 0x9E,	
        0x9E, 0x9C, 0x98, 0x90, 0x80, 0x81, 0x81, 0x83, 0x86, 0x8C, 0xB8, 0xE0, 0x03, 0x06, 0x1C, 0xF0,	
        0x00, 0x00, 0x00, 0x00, 0xE0, 0xFC, 0xFC, 0x7C, 0x3C, 0x1C, 0x9C, 0xCC, 0x60, 0x30, 0x1C, 0x07,	

        0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x02, 0x06, 0x0C, 0x09, 0x19, 0x33, 0x60, 0x40, 0x40,	
        0x47, 0x7C, 0x00, 0x00, 0x1C, 0x74, 0xC4, 0x84, 0x04, 0x04, 0x04, 0x04, 0x24, 0x64, 0xE4, 0xE4,	
        0xE4, 0xE4, 0x64, 0x24, 0x04, 0x04, 0x04, 0x04, 0x84, 0xC4, 0x74, 0x1C, 0x00, 0x00, 0x7C, 0x47,	
        0x40, 0x40, 0x60, 0x33, 0x19, 0x09, 0x0C, 0x06, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,	

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x02, 0x06, 0x04, 0x0C, 0x08, 0x08, 0x09,	
        0x09, 0x08, 0x08, 0x0C, 0x04, 0x06, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
    #elif defined(OEM_AQUATECH)
    {
        // AQUATECH LOGO
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xF8, 0xFC, 0xFC, 0xFE,	
        0xFE, 0xFE, 0xFF, 0x7F, 0x1F, 0x7F, 0xFF, 0xFE, 0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0xF0, 0xC0, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x7B, 0xBD, 0x9D, 0x9C, 0xDC,	
        0xBC, 0xCC, 0xC7, 0xC6, 0x86, 0x8C, 0x1B, 0x1F, 0x37, 0xE7, 0xE7, 0xF7, 0x7B, 0x7F, 0xFF, 0x3E,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x81, 0x07, 0x0F, 0x1F, 0x1F, 0x38,	
        0x20, 0x40, 0x40, 0x00, 0x01, 0x01, 0x43, 0x43, 0x23, 0x3A, 0x1C, 0x1C, 0x0E, 0x07, 0x01, 0x00,	
        0x00, 0x80, 0xE0, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,	
        0x80, 0x80, 0x80, 0x00, 0x00, 0xF0, 0xF0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0E, 0x05, 0x04, 0x05, 0x0E, 0x30, 0x0C, 0x12, 0x21,	
        0x21, 0x12, 0xFF, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x1F, 0x00, 0x0C, 0x12, 0x21, 0x21, 0x12, 0x3F,	
        0x00, 0x01, 0x3F, 0x3F, 0x01, 0x00, 0x0E, 0x1F, 0x35, 0x35, 0x35, 0x17, 0x16, 0x00, 0x0E, 0x1F,	
        0x31, 0x31, 0x31, 0x1B, 0x00, 0x3F, 0x3F, 0x01, 0x01, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00
    };
    #else
    {
        // ABB LOGO
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFF, 0xFF,	
        0xFF, 0xFE, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,	
        0xFF, 0xFF, 0xFF, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0xFF,	
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x00,	

        0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x00, 0x7F, 0x7F,	
        0x7F, 0x7F, 0x7F, 0x7F, 0xF8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x7F, 0x7F, 0x7F,	
        0x7F, 0x7F, 0x7F, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xDF, 0x8F, 0x03, 0x00, 0x00, 0x00, 0xFF,	
        0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xDF, 0x8F, 0x03, 0x00,	

        0x00, 0x00, 0xC0, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF,	
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,	
        0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0xFF,	
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC,	

        0xE0, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x07, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,	
        0x01, 0x07, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,	
        0xFF, 0xFF, 0xFF, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0xFF,	
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x1F, 0x0F, 0x03
    };
    #endif


    #ifdef TYPE_1_IMPLEMENTATION
        #pragma memory = default
    #endif

#endif  // end of #if defined(TYPE_3_IMPLEMENTATION) || defined(TYPE_2_IMPLEMENTATION) || (defined(TYPE_1_IMPLEMENTATION) && !defined(_NONVOL_IMPLEMENTATION))

#endif // #ifndef _FONTS_H

